<?php
/**
 * MatchV4ParticipantStatsDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Riot API
 *
 * OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. ***
 *
 * OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.7
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * MatchV4ParticipantStatsDto Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MatchV4ParticipantStatsDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'match-v4.ParticipantStatsDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'first_blood_assist' => 'bool',
        'vision_score' => 'int',
        'magic_damage_dealt_to_champions' => 'int',
        'damage_dealt_to_objectives' => 'int',
        'total_time_crowd_control_dealt' => 'int',
        'longest_time_spent_living' => 'int',
        'perk1_var1' => 'int',
        'perk1_var3' => 'int',
        'perk1_var2' => 'int',
        'triple_kills' => 'int',
        'perk3_var3' => 'int',
        'node_neutralize_assist' => 'int',
        'perk3_var2' => 'int',
        'player_score9' => 'int',
        'player_score8' => 'int',
        'kills' => 'int',
        'player_score1' => 'int',
        'player_score0' => 'int',
        'player_score3' => 'int',
        'player_score2' => 'int',
        'player_score5' => 'int',
        'player_score4' => 'int',
        'player_score7' => 'int',
        'player_score6' => 'int',
        'perk5_var1' => 'int',
        'perk5_var3' => 'int',
        'perk5_var2' => 'int',
        'total_score_rank' => 'int',
        'neutral_minions_killed' => 'int',
        'damage_dealt_to_turrets' => 'int',
        'physical_damage_dealt_to_champions' => 'int',
        'node_capture' => 'int',
        'largest_multi_kill' => 'int',
        'perk2_var2' => 'int',
        'perk2_var3' => 'int',
        'total_units_healed' => 'int',
        'perk2_var1' => 'int',
        'perk4_var1' => 'int',
        'perk4_var2' => 'int',
        'perk4_var3' => 'int',
        'wards_killed' => 'int',
        'largest_critical_strike' => 'int',
        'largest_killing_spree' => 'int',
        'quadra_kills' => 'int',
        'team_objective' => 'int',
        'magic_damage_dealt' => 'int',
        'item2' => 'int',
        'item3' => 'int',
        'item0' => 'int',
        'neutral_minions_killed_team_jungle' => 'int',
        'item6' => 'int',
        'item4' => 'int',
        'item5' => 'int',
        'perk1' => 'int',
        'perk0' => 'int',
        'perk3' => 'int',
        'perk2' => 'int',
        'perk5' => 'int',
        'perk4' => 'int',
        'perk3_var1' => 'int',
        'damage_self_mitigated' => 'int',
        'magical_damage_taken' => 'int',
        'first_inhibitor_kill' => 'bool',
        'true_damage_taken' => 'int',
        'node_neutralize' => 'int',
        'assists' => 'int',
        'combat_player_score' => 'int',
        'perk_primary_style' => 'int',
        'gold_spent' => 'int',
        'true_damage_dealt' => 'int',
        'participant_id' => 'int',
        'total_damage_taken' => 'int',
        'physical_damage_dealt' => 'int',
        'sight_wards_bought_in_game' => 'int',
        'total_damage_dealt_to_champions' => 'int',
        'physical_damage_taken' => 'int',
        'total_player_score' => 'int',
        'win' => 'bool',
        'objective_player_score' => 'int',
        'total_damage_dealt' => 'int',
        'item1' => 'int',
        'neutral_minions_killed_enemy_jungle' => 'int',
        'deaths' => 'int',
        'wards_placed' => 'int',
        'perk_sub_style' => 'int',
        'turret_kills' => 'int',
        'first_blood_kill' => 'bool',
        'true_damage_dealt_to_champions' => 'int',
        'gold_earned' => 'int',
        'killing_sprees' => 'int',
        'unreal_kills' => 'int',
        'altars_captured' => 'int',
        'first_tower_assist' => 'bool',
        'first_tower_kill' => 'bool',
        'champ_level' => 'int',
        'double_kills' => 'int',
        'node_capture_assist' => 'int',
        'inhibitor_kills' => 'int',
        'first_inhibitor_assist' => 'bool',
        'perk0_var1' => 'int',
        'perk0_var2' => 'int',
        'perk0_var3' => 'int',
        'vision_wards_bought_in_game' => 'int',
        'altars_neutralized' => 'int',
        'penta_kills' => 'int',
        'total_heal' => 'int',
        'total_minions_killed' => 'int',
        'time_c_cing_others' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'first_blood_assist' => null,
        'vision_score' => 'int64',
        'magic_damage_dealt_to_champions' => 'int64',
        'damage_dealt_to_objectives' => 'int64',
        'total_time_crowd_control_dealt' => 'int32',
        'longest_time_spent_living' => 'int32',
        'perk1_var1' => 'int32',
        'perk1_var3' => 'int32',
        'perk1_var2' => 'int32',
        'triple_kills' => 'int32',
        'perk3_var3' => 'int32',
        'node_neutralize_assist' => 'int32',
        'perk3_var2' => 'int32',
        'player_score9' => 'int32',
        'player_score8' => 'int32',
        'kills' => 'int32',
        'player_score1' => 'int32',
        'player_score0' => 'int32',
        'player_score3' => 'int32',
        'player_score2' => 'int32',
        'player_score5' => 'int32',
        'player_score4' => 'int32',
        'player_score7' => 'int32',
        'player_score6' => 'int32',
        'perk5_var1' => 'int32',
        'perk5_var3' => 'int32',
        'perk5_var2' => 'int32',
        'total_score_rank' => 'int32',
        'neutral_minions_killed' => 'int32',
        'damage_dealt_to_turrets' => 'int64',
        'physical_damage_dealt_to_champions' => 'int64',
        'node_capture' => 'int32',
        'largest_multi_kill' => 'int32',
        'perk2_var2' => 'int32',
        'perk2_var3' => 'int32',
        'total_units_healed' => 'int32',
        'perk2_var1' => 'int32',
        'perk4_var1' => 'int32',
        'perk4_var2' => 'int32',
        'perk4_var3' => 'int32',
        'wards_killed' => 'int32',
        'largest_critical_strike' => 'int32',
        'largest_killing_spree' => 'int32',
        'quadra_kills' => 'int32',
        'team_objective' => 'int32',
        'magic_damage_dealt' => 'int64',
        'item2' => 'int32',
        'item3' => 'int32',
        'item0' => 'int32',
        'neutral_minions_killed_team_jungle' => 'int32',
        'item6' => 'int32',
        'item4' => 'int32',
        'item5' => 'int32',
        'perk1' => 'int32',
        'perk0' => 'int32',
        'perk3' => 'int32',
        'perk2' => 'int32',
        'perk5' => 'int32',
        'perk4' => 'int32',
        'perk3_var1' => 'int32',
        'damage_self_mitigated' => 'int64',
        'magical_damage_taken' => 'int64',
        'first_inhibitor_kill' => null,
        'true_damage_taken' => 'int64',
        'node_neutralize' => 'int32',
        'assists' => 'int32',
        'combat_player_score' => 'int32',
        'perk_primary_style' => 'int32',
        'gold_spent' => 'int32',
        'true_damage_dealt' => 'int64',
        'participant_id' => 'int32',
        'total_damage_taken' => 'int64',
        'physical_damage_dealt' => 'int64',
        'sight_wards_bought_in_game' => 'int32',
        'total_damage_dealt_to_champions' => 'int64',
        'physical_damage_taken' => 'int64',
        'total_player_score' => 'int32',
        'win' => null,
        'objective_player_score' => 'int32',
        'total_damage_dealt' => 'int64',
        'item1' => 'int32',
        'neutral_minions_killed_enemy_jungle' => 'int32',
        'deaths' => 'int32',
        'wards_placed' => 'int32',
        'perk_sub_style' => 'int32',
        'turret_kills' => 'int32',
        'first_blood_kill' => null,
        'true_damage_dealt_to_champions' => 'int64',
        'gold_earned' => 'int32',
        'killing_sprees' => 'int32',
        'unreal_kills' => 'int32',
        'altars_captured' => 'int32',
        'first_tower_assist' => null,
        'first_tower_kill' => null,
        'champ_level' => 'int32',
        'double_kills' => 'int32',
        'node_capture_assist' => 'int32',
        'inhibitor_kills' => 'int32',
        'first_inhibitor_assist' => null,
        'perk0_var1' => 'int32',
        'perk0_var2' => 'int32',
        'perk0_var3' => 'int32',
        'vision_wards_bought_in_game' => 'int32',
        'altars_neutralized' => 'int32',
        'penta_kills' => 'int32',
        'total_heal' => 'int64',
        'total_minions_killed' => 'int32',
        'time_c_cing_others' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'first_blood_assist' => 'firstBloodAssist',
        'vision_score' => 'visionScore',
        'magic_damage_dealt_to_champions' => 'magicDamageDealtToChampions',
        'damage_dealt_to_objectives' => 'damageDealtToObjectives',
        'total_time_crowd_control_dealt' => 'totalTimeCrowdControlDealt',
        'longest_time_spent_living' => 'longestTimeSpentLiving',
        'perk1_var1' => 'perk1Var1',
        'perk1_var3' => 'perk1Var3',
        'perk1_var2' => 'perk1Var2',
        'triple_kills' => 'tripleKills',
        'perk3_var3' => 'perk3Var3',
        'node_neutralize_assist' => 'nodeNeutralizeAssist',
        'perk3_var2' => 'perk3Var2',
        'player_score9' => 'playerScore9',
        'player_score8' => 'playerScore8',
        'kills' => 'kills',
        'player_score1' => 'playerScore1',
        'player_score0' => 'playerScore0',
        'player_score3' => 'playerScore3',
        'player_score2' => 'playerScore2',
        'player_score5' => 'playerScore5',
        'player_score4' => 'playerScore4',
        'player_score7' => 'playerScore7',
        'player_score6' => 'playerScore6',
        'perk5_var1' => 'perk5Var1',
        'perk5_var3' => 'perk5Var3',
        'perk5_var2' => 'perk5Var2',
        'total_score_rank' => 'totalScoreRank',
        'neutral_minions_killed' => 'neutralMinionsKilled',
        'damage_dealt_to_turrets' => 'damageDealtToTurrets',
        'physical_damage_dealt_to_champions' => 'physicalDamageDealtToChampions',
        'node_capture' => 'nodeCapture',
        'largest_multi_kill' => 'largestMultiKill',
        'perk2_var2' => 'perk2Var2',
        'perk2_var3' => 'perk2Var3',
        'total_units_healed' => 'totalUnitsHealed',
        'perk2_var1' => 'perk2Var1',
        'perk4_var1' => 'perk4Var1',
        'perk4_var2' => 'perk4Var2',
        'perk4_var3' => 'perk4Var3',
        'wards_killed' => 'wardsKilled',
        'largest_critical_strike' => 'largestCriticalStrike',
        'largest_killing_spree' => 'largestKillingSpree',
        'quadra_kills' => 'quadraKills',
        'team_objective' => 'teamObjective',
        'magic_damage_dealt' => 'magicDamageDealt',
        'item2' => 'item2',
        'item3' => 'item3',
        'item0' => 'item0',
        'neutral_minions_killed_team_jungle' => 'neutralMinionsKilledTeamJungle',
        'item6' => 'item6',
        'item4' => 'item4',
        'item5' => 'item5',
        'perk1' => 'perk1',
        'perk0' => 'perk0',
        'perk3' => 'perk3',
        'perk2' => 'perk2',
        'perk5' => 'perk5',
        'perk4' => 'perk4',
        'perk3_var1' => 'perk3Var1',
        'damage_self_mitigated' => 'damageSelfMitigated',
        'magical_damage_taken' => 'magicalDamageTaken',
        'first_inhibitor_kill' => 'firstInhibitorKill',
        'true_damage_taken' => 'trueDamageTaken',
        'node_neutralize' => 'nodeNeutralize',
        'assists' => 'assists',
        'combat_player_score' => 'combatPlayerScore',
        'perk_primary_style' => 'perkPrimaryStyle',
        'gold_spent' => 'goldSpent',
        'true_damage_dealt' => 'trueDamageDealt',
        'participant_id' => 'participantId',
        'total_damage_taken' => 'totalDamageTaken',
        'physical_damage_dealt' => 'physicalDamageDealt',
        'sight_wards_bought_in_game' => 'sightWardsBoughtInGame',
        'total_damage_dealt_to_champions' => 'totalDamageDealtToChampions',
        'physical_damage_taken' => 'physicalDamageTaken',
        'total_player_score' => 'totalPlayerScore',
        'win' => 'win',
        'objective_player_score' => 'objectivePlayerScore',
        'total_damage_dealt' => 'totalDamageDealt',
        'item1' => 'item1',
        'neutral_minions_killed_enemy_jungle' => 'neutralMinionsKilledEnemyJungle',
        'deaths' => 'deaths',
        'wards_placed' => 'wardsPlaced',
        'perk_sub_style' => 'perkSubStyle',
        'turret_kills' => 'turretKills',
        'first_blood_kill' => 'firstBloodKill',
        'true_damage_dealt_to_champions' => 'trueDamageDealtToChampions',
        'gold_earned' => 'goldEarned',
        'killing_sprees' => 'killingSprees',
        'unreal_kills' => 'unrealKills',
        'altars_captured' => 'altarsCaptured',
        'first_tower_assist' => 'firstTowerAssist',
        'first_tower_kill' => 'firstTowerKill',
        'champ_level' => 'champLevel',
        'double_kills' => 'doubleKills',
        'node_capture_assist' => 'nodeCaptureAssist',
        'inhibitor_kills' => 'inhibitorKills',
        'first_inhibitor_assist' => 'firstInhibitorAssist',
        'perk0_var1' => 'perk0Var1',
        'perk0_var2' => 'perk0Var2',
        'perk0_var3' => 'perk0Var3',
        'vision_wards_bought_in_game' => 'visionWardsBoughtInGame',
        'altars_neutralized' => 'altarsNeutralized',
        'penta_kills' => 'pentaKills',
        'total_heal' => 'totalHeal',
        'total_minions_killed' => 'totalMinionsKilled',
        'time_c_cing_others' => 'timeCCingOthers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'first_blood_assist' => 'setFirstBloodAssist',
        'vision_score' => 'setVisionScore',
        'magic_damage_dealt_to_champions' => 'setMagicDamageDealtToChampions',
        'damage_dealt_to_objectives' => 'setDamageDealtToObjectives',
        'total_time_crowd_control_dealt' => 'setTotalTimeCrowdControlDealt',
        'longest_time_spent_living' => 'setLongestTimeSpentLiving',
        'perk1_var1' => 'setPerk1Var1',
        'perk1_var3' => 'setPerk1Var3',
        'perk1_var2' => 'setPerk1Var2',
        'triple_kills' => 'setTripleKills',
        'perk3_var3' => 'setPerk3Var3',
        'node_neutralize_assist' => 'setNodeNeutralizeAssist',
        'perk3_var2' => 'setPerk3Var2',
        'player_score9' => 'setPlayerScore9',
        'player_score8' => 'setPlayerScore8',
        'kills' => 'setKills',
        'player_score1' => 'setPlayerScore1',
        'player_score0' => 'setPlayerScore0',
        'player_score3' => 'setPlayerScore3',
        'player_score2' => 'setPlayerScore2',
        'player_score5' => 'setPlayerScore5',
        'player_score4' => 'setPlayerScore4',
        'player_score7' => 'setPlayerScore7',
        'player_score6' => 'setPlayerScore6',
        'perk5_var1' => 'setPerk5Var1',
        'perk5_var3' => 'setPerk5Var3',
        'perk5_var2' => 'setPerk5Var2',
        'total_score_rank' => 'setTotalScoreRank',
        'neutral_minions_killed' => 'setNeutralMinionsKilled',
        'damage_dealt_to_turrets' => 'setDamageDealtToTurrets',
        'physical_damage_dealt_to_champions' => 'setPhysicalDamageDealtToChampions',
        'node_capture' => 'setNodeCapture',
        'largest_multi_kill' => 'setLargestMultiKill',
        'perk2_var2' => 'setPerk2Var2',
        'perk2_var3' => 'setPerk2Var3',
        'total_units_healed' => 'setTotalUnitsHealed',
        'perk2_var1' => 'setPerk2Var1',
        'perk4_var1' => 'setPerk4Var1',
        'perk4_var2' => 'setPerk4Var2',
        'perk4_var3' => 'setPerk4Var3',
        'wards_killed' => 'setWardsKilled',
        'largest_critical_strike' => 'setLargestCriticalStrike',
        'largest_killing_spree' => 'setLargestKillingSpree',
        'quadra_kills' => 'setQuadraKills',
        'team_objective' => 'setTeamObjective',
        'magic_damage_dealt' => 'setMagicDamageDealt',
        'item2' => 'setItem2',
        'item3' => 'setItem3',
        'item0' => 'setItem0',
        'neutral_minions_killed_team_jungle' => 'setNeutralMinionsKilledTeamJungle',
        'item6' => 'setItem6',
        'item4' => 'setItem4',
        'item5' => 'setItem5',
        'perk1' => 'setPerk1',
        'perk0' => 'setPerk0',
        'perk3' => 'setPerk3',
        'perk2' => 'setPerk2',
        'perk5' => 'setPerk5',
        'perk4' => 'setPerk4',
        'perk3_var1' => 'setPerk3Var1',
        'damage_self_mitigated' => 'setDamageSelfMitigated',
        'magical_damage_taken' => 'setMagicalDamageTaken',
        'first_inhibitor_kill' => 'setFirstInhibitorKill',
        'true_damage_taken' => 'setTrueDamageTaken',
        'node_neutralize' => 'setNodeNeutralize',
        'assists' => 'setAssists',
        'combat_player_score' => 'setCombatPlayerScore',
        'perk_primary_style' => 'setPerkPrimaryStyle',
        'gold_spent' => 'setGoldSpent',
        'true_damage_dealt' => 'setTrueDamageDealt',
        'participant_id' => 'setParticipantId',
        'total_damage_taken' => 'setTotalDamageTaken',
        'physical_damage_dealt' => 'setPhysicalDamageDealt',
        'sight_wards_bought_in_game' => 'setSightWardsBoughtInGame',
        'total_damage_dealt_to_champions' => 'setTotalDamageDealtToChampions',
        'physical_damage_taken' => 'setPhysicalDamageTaken',
        'total_player_score' => 'setTotalPlayerScore',
        'win' => 'setWin',
        'objective_player_score' => 'setObjectivePlayerScore',
        'total_damage_dealt' => 'setTotalDamageDealt',
        'item1' => 'setItem1',
        'neutral_minions_killed_enemy_jungle' => 'setNeutralMinionsKilledEnemyJungle',
        'deaths' => 'setDeaths',
        'wards_placed' => 'setWardsPlaced',
        'perk_sub_style' => 'setPerkSubStyle',
        'turret_kills' => 'setTurretKills',
        'first_blood_kill' => 'setFirstBloodKill',
        'true_damage_dealt_to_champions' => 'setTrueDamageDealtToChampions',
        'gold_earned' => 'setGoldEarned',
        'killing_sprees' => 'setKillingSprees',
        'unreal_kills' => 'setUnrealKills',
        'altars_captured' => 'setAltarsCaptured',
        'first_tower_assist' => 'setFirstTowerAssist',
        'first_tower_kill' => 'setFirstTowerKill',
        'champ_level' => 'setChampLevel',
        'double_kills' => 'setDoubleKills',
        'node_capture_assist' => 'setNodeCaptureAssist',
        'inhibitor_kills' => 'setInhibitorKills',
        'first_inhibitor_assist' => 'setFirstInhibitorAssist',
        'perk0_var1' => 'setPerk0Var1',
        'perk0_var2' => 'setPerk0Var2',
        'perk0_var3' => 'setPerk0Var3',
        'vision_wards_bought_in_game' => 'setVisionWardsBoughtInGame',
        'altars_neutralized' => 'setAltarsNeutralized',
        'penta_kills' => 'setPentaKills',
        'total_heal' => 'setTotalHeal',
        'total_minions_killed' => 'setTotalMinionsKilled',
        'time_c_cing_others' => 'setTimeCCingOthers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'first_blood_assist' => 'getFirstBloodAssist',
        'vision_score' => 'getVisionScore',
        'magic_damage_dealt_to_champions' => 'getMagicDamageDealtToChampions',
        'damage_dealt_to_objectives' => 'getDamageDealtToObjectives',
        'total_time_crowd_control_dealt' => 'getTotalTimeCrowdControlDealt',
        'longest_time_spent_living' => 'getLongestTimeSpentLiving',
        'perk1_var1' => 'getPerk1Var1',
        'perk1_var3' => 'getPerk1Var3',
        'perk1_var2' => 'getPerk1Var2',
        'triple_kills' => 'getTripleKills',
        'perk3_var3' => 'getPerk3Var3',
        'node_neutralize_assist' => 'getNodeNeutralizeAssist',
        'perk3_var2' => 'getPerk3Var2',
        'player_score9' => 'getPlayerScore9',
        'player_score8' => 'getPlayerScore8',
        'kills' => 'getKills',
        'player_score1' => 'getPlayerScore1',
        'player_score0' => 'getPlayerScore0',
        'player_score3' => 'getPlayerScore3',
        'player_score2' => 'getPlayerScore2',
        'player_score5' => 'getPlayerScore5',
        'player_score4' => 'getPlayerScore4',
        'player_score7' => 'getPlayerScore7',
        'player_score6' => 'getPlayerScore6',
        'perk5_var1' => 'getPerk5Var1',
        'perk5_var3' => 'getPerk5Var3',
        'perk5_var2' => 'getPerk5Var2',
        'total_score_rank' => 'getTotalScoreRank',
        'neutral_minions_killed' => 'getNeutralMinionsKilled',
        'damage_dealt_to_turrets' => 'getDamageDealtToTurrets',
        'physical_damage_dealt_to_champions' => 'getPhysicalDamageDealtToChampions',
        'node_capture' => 'getNodeCapture',
        'largest_multi_kill' => 'getLargestMultiKill',
        'perk2_var2' => 'getPerk2Var2',
        'perk2_var3' => 'getPerk2Var3',
        'total_units_healed' => 'getTotalUnitsHealed',
        'perk2_var1' => 'getPerk2Var1',
        'perk4_var1' => 'getPerk4Var1',
        'perk4_var2' => 'getPerk4Var2',
        'perk4_var3' => 'getPerk4Var3',
        'wards_killed' => 'getWardsKilled',
        'largest_critical_strike' => 'getLargestCriticalStrike',
        'largest_killing_spree' => 'getLargestKillingSpree',
        'quadra_kills' => 'getQuadraKills',
        'team_objective' => 'getTeamObjective',
        'magic_damage_dealt' => 'getMagicDamageDealt',
        'item2' => 'getItem2',
        'item3' => 'getItem3',
        'item0' => 'getItem0',
        'neutral_minions_killed_team_jungle' => 'getNeutralMinionsKilledTeamJungle',
        'item6' => 'getItem6',
        'item4' => 'getItem4',
        'item5' => 'getItem5',
        'perk1' => 'getPerk1',
        'perk0' => 'getPerk0',
        'perk3' => 'getPerk3',
        'perk2' => 'getPerk2',
        'perk5' => 'getPerk5',
        'perk4' => 'getPerk4',
        'perk3_var1' => 'getPerk3Var1',
        'damage_self_mitigated' => 'getDamageSelfMitigated',
        'magical_damage_taken' => 'getMagicalDamageTaken',
        'first_inhibitor_kill' => 'getFirstInhibitorKill',
        'true_damage_taken' => 'getTrueDamageTaken',
        'node_neutralize' => 'getNodeNeutralize',
        'assists' => 'getAssists',
        'combat_player_score' => 'getCombatPlayerScore',
        'perk_primary_style' => 'getPerkPrimaryStyle',
        'gold_spent' => 'getGoldSpent',
        'true_damage_dealt' => 'getTrueDamageDealt',
        'participant_id' => 'getParticipantId',
        'total_damage_taken' => 'getTotalDamageTaken',
        'physical_damage_dealt' => 'getPhysicalDamageDealt',
        'sight_wards_bought_in_game' => 'getSightWardsBoughtInGame',
        'total_damage_dealt_to_champions' => 'getTotalDamageDealtToChampions',
        'physical_damage_taken' => 'getPhysicalDamageTaken',
        'total_player_score' => 'getTotalPlayerScore',
        'win' => 'getWin',
        'objective_player_score' => 'getObjectivePlayerScore',
        'total_damage_dealt' => 'getTotalDamageDealt',
        'item1' => 'getItem1',
        'neutral_minions_killed_enemy_jungle' => 'getNeutralMinionsKilledEnemyJungle',
        'deaths' => 'getDeaths',
        'wards_placed' => 'getWardsPlaced',
        'perk_sub_style' => 'getPerkSubStyle',
        'turret_kills' => 'getTurretKills',
        'first_blood_kill' => 'getFirstBloodKill',
        'true_damage_dealt_to_champions' => 'getTrueDamageDealtToChampions',
        'gold_earned' => 'getGoldEarned',
        'killing_sprees' => 'getKillingSprees',
        'unreal_kills' => 'getUnrealKills',
        'altars_captured' => 'getAltarsCaptured',
        'first_tower_assist' => 'getFirstTowerAssist',
        'first_tower_kill' => 'getFirstTowerKill',
        'champ_level' => 'getChampLevel',
        'double_kills' => 'getDoubleKills',
        'node_capture_assist' => 'getNodeCaptureAssist',
        'inhibitor_kills' => 'getInhibitorKills',
        'first_inhibitor_assist' => 'getFirstInhibitorAssist',
        'perk0_var1' => 'getPerk0Var1',
        'perk0_var2' => 'getPerk0Var2',
        'perk0_var3' => 'getPerk0Var3',
        'vision_wards_bought_in_game' => 'getVisionWardsBoughtInGame',
        'altars_neutralized' => 'getAltarsNeutralized',
        'penta_kills' => 'getPentaKills',
        'total_heal' => 'getTotalHeal',
        'total_minions_killed' => 'getTotalMinionsKilled',
        'time_c_cing_others' => 'getTimeCCingOthers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['first_blood_assist'] = isset($data['first_blood_assist']) ? $data['first_blood_assist'] : null;
        $this->container['vision_score'] = isset($data['vision_score']) ? $data['vision_score'] : null;
        $this->container['magic_damage_dealt_to_champions'] = isset($data['magic_damage_dealt_to_champions']) ? $data['magic_damage_dealt_to_champions'] : null;
        $this->container['damage_dealt_to_objectives'] = isset($data['damage_dealt_to_objectives']) ? $data['damage_dealt_to_objectives'] : null;
        $this->container['total_time_crowd_control_dealt'] = isset($data['total_time_crowd_control_dealt']) ? $data['total_time_crowd_control_dealt'] : null;
        $this->container['longest_time_spent_living'] = isset($data['longest_time_spent_living']) ? $data['longest_time_spent_living'] : null;
        $this->container['perk1_var1'] = isset($data['perk1_var1']) ? $data['perk1_var1'] : null;
        $this->container['perk1_var3'] = isset($data['perk1_var3']) ? $data['perk1_var3'] : null;
        $this->container['perk1_var2'] = isset($data['perk1_var2']) ? $data['perk1_var2'] : null;
        $this->container['triple_kills'] = isset($data['triple_kills']) ? $data['triple_kills'] : null;
        $this->container['perk3_var3'] = isset($data['perk3_var3']) ? $data['perk3_var3'] : null;
        $this->container['node_neutralize_assist'] = isset($data['node_neutralize_assist']) ? $data['node_neutralize_assist'] : null;
        $this->container['perk3_var2'] = isset($data['perk3_var2']) ? $data['perk3_var2'] : null;
        $this->container['player_score9'] = isset($data['player_score9']) ? $data['player_score9'] : null;
        $this->container['player_score8'] = isset($data['player_score8']) ? $data['player_score8'] : null;
        $this->container['kills'] = isset($data['kills']) ? $data['kills'] : null;
        $this->container['player_score1'] = isset($data['player_score1']) ? $data['player_score1'] : null;
        $this->container['player_score0'] = isset($data['player_score0']) ? $data['player_score0'] : null;
        $this->container['player_score3'] = isset($data['player_score3']) ? $data['player_score3'] : null;
        $this->container['player_score2'] = isset($data['player_score2']) ? $data['player_score2'] : null;
        $this->container['player_score5'] = isset($data['player_score5']) ? $data['player_score5'] : null;
        $this->container['player_score4'] = isset($data['player_score4']) ? $data['player_score4'] : null;
        $this->container['player_score7'] = isset($data['player_score7']) ? $data['player_score7'] : null;
        $this->container['player_score6'] = isset($data['player_score6']) ? $data['player_score6'] : null;
        $this->container['perk5_var1'] = isset($data['perk5_var1']) ? $data['perk5_var1'] : null;
        $this->container['perk5_var3'] = isset($data['perk5_var3']) ? $data['perk5_var3'] : null;
        $this->container['perk5_var2'] = isset($data['perk5_var2']) ? $data['perk5_var2'] : null;
        $this->container['total_score_rank'] = isset($data['total_score_rank']) ? $data['total_score_rank'] : null;
        $this->container['neutral_minions_killed'] = isset($data['neutral_minions_killed']) ? $data['neutral_minions_killed'] : null;
        $this->container['damage_dealt_to_turrets'] = isset($data['damage_dealt_to_turrets']) ? $data['damage_dealt_to_turrets'] : null;
        $this->container['physical_damage_dealt_to_champions'] = isset($data['physical_damage_dealt_to_champions']) ? $data['physical_damage_dealt_to_champions'] : null;
        $this->container['node_capture'] = isset($data['node_capture']) ? $data['node_capture'] : null;
        $this->container['largest_multi_kill'] = isset($data['largest_multi_kill']) ? $data['largest_multi_kill'] : null;
        $this->container['perk2_var2'] = isset($data['perk2_var2']) ? $data['perk2_var2'] : null;
        $this->container['perk2_var3'] = isset($data['perk2_var3']) ? $data['perk2_var3'] : null;
        $this->container['total_units_healed'] = isset($data['total_units_healed']) ? $data['total_units_healed'] : null;
        $this->container['perk2_var1'] = isset($data['perk2_var1']) ? $data['perk2_var1'] : null;
        $this->container['perk4_var1'] = isset($data['perk4_var1']) ? $data['perk4_var1'] : null;
        $this->container['perk4_var2'] = isset($data['perk4_var2']) ? $data['perk4_var2'] : null;
        $this->container['perk4_var3'] = isset($data['perk4_var3']) ? $data['perk4_var3'] : null;
        $this->container['wards_killed'] = isset($data['wards_killed']) ? $data['wards_killed'] : null;
        $this->container['largest_critical_strike'] = isset($data['largest_critical_strike']) ? $data['largest_critical_strike'] : null;
        $this->container['largest_killing_spree'] = isset($data['largest_killing_spree']) ? $data['largest_killing_spree'] : null;
        $this->container['quadra_kills'] = isset($data['quadra_kills']) ? $data['quadra_kills'] : null;
        $this->container['team_objective'] = isset($data['team_objective']) ? $data['team_objective'] : null;
        $this->container['magic_damage_dealt'] = isset($data['magic_damage_dealt']) ? $data['magic_damage_dealt'] : null;
        $this->container['item2'] = isset($data['item2']) ? $data['item2'] : null;
        $this->container['item3'] = isset($data['item3']) ? $data['item3'] : null;
        $this->container['item0'] = isset($data['item0']) ? $data['item0'] : null;
        $this->container['neutral_minions_killed_team_jungle'] = isset($data['neutral_minions_killed_team_jungle']) ? $data['neutral_minions_killed_team_jungle'] : null;
        $this->container['item6'] = isset($data['item6']) ? $data['item6'] : null;
        $this->container['item4'] = isset($data['item4']) ? $data['item4'] : null;
        $this->container['item5'] = isset($data['item5']) ? $data['item5'] : null;
        $this->container['perk1'] = isset($data['perk1']) ? $data['perk1'] : null;
        $this->container['perk0'] = isset($data['perk0']) ? $data['perk0'] : null;
        $this->container['perk3'] = isset($data['perk3']) ? $data['perk3'] : null;
        $this->container['perk2'] = isset($data['perk2']) ? $data['perk2'] : null;
        $this->container['perk5'] = isset($data['perk5']) ? $data['perk5'] : null;
        $this->container['perk4'] = isset($data['perk4']) ? $data['perk4'] : null;
        $this->container['perk3_var1'] = isset($data['perk3_var1']) ? $data['perk3_var1'] : null;
        $this->container['damage_self_mitigated'] = isset($data['damage_self_mitigated']) ? $data['damage_self_mitigated'] : null;
        $this->container['magical_damage_taken'] = isset($data['magical_damage_taken']) ? $data['magical_damage_taken'] : null;
        $this->container['first_inhibitor_kill'] = isset($data['first_inhibitor_kill']) ? $data['first_inhibitor_kill'] : null;
        $this->container['true_damage_taken'] = isset($data['true_damage_taken']) ? $data['true_damage_taken'] : null;
        $this->container['node_neutralize'] = isset($data['node_neutralize']) ? $data['node_neutralize'] : null;
        $this->container['assists'] = isset($data['assists']) ? $data['assists'] : null;
        $this->container['combat_player_score'] = isset($data['combat_player_score']) ? $data['combat_player_score'] : null;
        $this->container['perk_primary_style'] = isset($data['perk_primary_style']) ? $data['perk_primary_style'] : null;
        $this->container['gold_spent'] = isset($data['gold_spent']) ? $data['gold_spent'] : null;
        $this->container['true_damage_dealt'] = isset($data['true_damage_dealt']) ? $data['true_damage_dealt'] : null;
        $this->container['participant_id'] = isset($data['participant_id']) ? $data['participant_id'] : null;
        $this->container['total_damage_taken'] = isset($data['total_damage_taken']) ? $data['total_damage_taken'] : null;
        $this->container['physical_damage_dealt'] = isset($data['physical_damage_dealt']) ? $data['physical_damage_dealt'] : null;
        $this->container['sight_wards_bought_in_game'] = isset($data['sight_wards_bought_in_game']) ? $data['sight_wards_bought_in_game'] : null;
        $this->container['total_damage_dealt_to_champions'] = isset($data['total_damage_dealt_to_champions']) ? $data['total_damage_dealt_to_champions'] : null;
        $this->container['physical_damage_taken'] = isset($data['physical_damage_taken']) ? $data['physical_damage_taken'] : null;
        $this->container['total_player_score'] = isset($data['total_player_score']) ? $data['total_player_score'] : null;
        $this->container['win'] = isset($data['win']) ? $data['win'] : null;
        $this->container['objective_player_score'] = isset($data['objective_player_score']) ? $data['objective_player_score'] : null;
        $this->container['total_damage_dealt'] = isset($data['total_damage_dealt']) ? $data['total_damage_dealt'] : null;
        $this->container['item1'] = isset($data['item1']) ? $data['item1'] : null;
        $this->container['neutral_minions_killed_enemy_jungle'] = isset($data['neutral_minions_killed_enemy_jungle']) ? $data['neutral_minions_killed_enemy_jungle'] : null;
        $this->container['deaths'] = isset($data['deaths']) ? $data['deaths'] : null;
        $this->container['wards_placed'] = isset($data['wards_placed']) ? $data['wards_placed'] : null;
        $this->container['perk_sub_style'] = isset($data['perk_sub_style']) ? $data['perk_sub_style'] : null;
        $this->container['turret_kills'] = isset($data['turret_kills']) ? $data['turret_kills'] : null;
        $this->container['first_blood_kill'] = isset($data['first_blood_kill']) ? $data['first_blood_kill'] : null;
        $this->container['true_damage_dealt_to_champions'] = isset($data['true_damage_dealt_to_champions']) ? $data['true_damage_dealt_to_champions'] : null;
        $this->container['gold_earned'] = isset($data['gold_earned']) ? $data['gold_earned'] : null;
        $this->container['killing_sprees'] = isset($data['killing_sprees']) ? $data['killing_sprees'] : null;
        $this->container['unreal_kills'] = isset($data['unreal_kills']) ? $data['unreal_kills'] : null;
        $this->container['altars_captured'] = isset($data['altars_captured']) ? $data['altars_captured'] : null;
        $this->container['first_tower_assist'] = isset($data['first_tower_assist']) ? $data['first_tower_assist'] : null;
        $this->container['first_tower_kill'] = isset($data['first_tower_kill']) ? $data['first_tower_kill'] : null;
        $this->container['champ_level'] = isset($data['champ_level']) ? $data['champ_level'] : null;
        $this->container['double_kills'] = isset($data['double_kills']) ? $data['double_kills'] : null;
        $this->container['node_capture_assist'] = isset($data['node_capture_assist']) ? $data['node_capture_assist'] : null;
        $this->container['inhibitor_kills'] = isset($data['inhibitor_kills']) ? $data['inhibitor_kills'] : null;
        $this->container['first_inhibitor_assist'] = isset($data['first_inhibitor_assist']) ? $data['first_inhibitor_assist'] : null;
        $this->container['perk0_var1'] = isset($data['perk0_var1']) ? $data['perk0_var1'] : null;
        $this->container['perk0_var2'] = isset($data['perk0_var2']) ? $data['perk0_var2'] : null;
        $this->container['perk0_var3'] = isset($data['perk0_var3']) ? $data['perk0_var3'] : null;
        $this->container['vision_wards_bought_in_game'] = isset($data['vision_wards_bought_in_game']) ? $data['vision_wards_bought_in_game'] : null;
        $this->container['altars_neutralized'] = isset($data['altars_neutralized']) ? $data['altars_neutralized'] : null;
        $this->container['penta_kills'] = isset($data['penta_kills']) ? $data['penta_kills'] : null;
        $this->container['total_heal'] = isset($data['total_heal']) ? $data['total_heal'] : null;
        $this->container['total_minions_killed'] = isset($data['total_minions_killed']) ? $data['total_minions_killed'] : null;
        $this->container['time_c_cing_others'] = isset($data['time_c_cing_others']) ? $data['time_c_cing_others'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets first_blood_assist
     *
     * @return bool
     */
    public function getFirstBloodAssist()
    {
        return $this->container['first_blood_assist'];
    }

    /**
     * Sets first_blood_assist
     *
     * @param bool $first_blood_assist first_blood_assist
     *
     * @return $this
     */
    public function setFirstBloodAssist($first_blood_assist)
    {
        $this->container['first_blood_assist'] = $first_blood_assist;

        return $this;
    }

    /**
     * Gets vision_score
     *
     * @return int
     */
    public function getVisionScore()
    {
        return $this->container['vision_score'];
    }

    /**
     * Sets vision_score
     *
     * @param int $vision_score vision_score
     *
     * @return $this
     */
    public function setVisionScore($vision_score)
    {
        $this->container['vision_score'] = $vision_score;

        return $this;
    }

    /**
     * Gets magic_damage_dealt_to_champions
     *
     * @return int
     */
    public function getMagicDamageDealtToChampions()
    {
        return $this->container['magic_damage_dealt_to_champions'];
    }

    /**
     * Sets magic_damage_dealt_to_champions
     *
     * @param int $magic_damage_dealt_to_champions magic_damage_dealt_to_champions
     *
     * @return $this
     */
    public function setMagicDamageDealtToChampions($magic_damage_dealt_to_champions)
    {
        $this->container['magic_damage_dealt_to_champions'] = $magic_damage_dealt_to_champions;

        return $this;
    }

    /**
     * Gets damage_dealt_to_objectives
     *
     * @return int
     */
    public function getDamageDealtToObjectives()
    {
        return $this->container['damage_dealt_to_objectives'];
    }

    /**
     * Sets damage_dealt_to_objectives
     *
     * @param int $damage_dealt_to_objectives damage_dealt_to_objectives
     *
     * @return $this
     */
    public function setDamageDealtToObjectives($damage_dealt_to_objectives)
    {
        $this->container['damage_dealt_to_objectives'] = $damage_dealt_to_objectives;

        return $this;
    }

    /**
     * Gets total_time_crowd_control_dealt
     *
     * @return int
     */
    public function getTotalTimeCrowdControlDealt()
    {
        return $this->container['total_time_crowd_control_dealt'];
    }

    /**
     * Sets total_time_crowd_control_dealt
     *
     * @param int $total_time_crowd_control_dealt total_time_crowd_control_dealt
     *
     * @return $this
     */
    public function setTotalTimeCrowdControlDealt($total_time_crowd_control_dealt)
    {
        $this->container['total_time_crowd_control_dealt'] = $total_time_crowd_control_dealt;

        return $this;
    }

    /**
     * Gets longest_time_spent_living
     *
     * @return int
     */
    public function getLongestTimeSpentLiving()
    {
        return $this->container['longest_time_spent_living'];
    }

    /**
     * Sets longest_time_spent_living
     *
     * @param int $longest_time_spent_living longest_time_spent_living
     *
     * @return $this
     */
    public function setLongestTimeSpentLiving($longest_time_spent_living)
    {
        $this->container['longest_time_spent_living'] = $longest_time_spent_living;

        return $this;
    }

    /**
     * Gets perk1_var1
     *
     * @return int
     */
    public function getPerk1Var1()
    {
        return $this->container['perk1_var1'];
    }

    /**
     * Sets perk1_var1
     *
     * @param int $perk1_var1 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk1Var1($perk1_var1)
    {
        $this->container['perk1_var1'] = $perk1_var1;

        return $this;
    }

    /**
     * Gets perk1_var3
     *
     * @return int
     */
    public function getPerk1Var3()
    {
        return $this->container['perk1_var3'];
    }

    /**
     * Sets perk1_var3
     *
     * @param int $perk1_var3 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk1Var3($perk1_var3)
    {
        $this->container['perk1_var3'] = $perk1_var3;

        return $this;
    }

    /**
     * Gets perk1_var2
     *
     * @return int
     */
    public function getPerk1Var2()
    {
        return $this->container['perk1_var2'];
    }

    /**
     * Sets perk1_var2
     *
     * @param int $perk1_var2 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk1Var2($perk1_var2)
    {
        $this->container['perk1_var2'] = $perk1_var2;

        return $this;
    }

    /**
     * Gets triple_kills
     *
     * @return int
     */
    public function getTripleKills()
    {
        return $this->container['triple_kills'];
    }

    /**
     * Sets triple_kills
     *
     * @param int $triple_kills triple_kills
     *
     * @return $this
     */
    public function setTripleKills($triple_kills)
    {
        $this->container['triple_kills'] = $triple_kills;

        return $this;
    }

    /**
     * Gets perk3_var3
     *
     * @return int
     */
    public function getPerk3Var3()
    {
        return $this->container['perk3_var3'];
    }

    /**
     * Sets perk3_var3
     *
     * @param int $perk3_var3 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk3Var3($perk3_var3)
    {
        $this->container['perk3_var3'] = $perk3_var3;

        return $this;
    }

    /**
     * Gets node_neutralize_assist
     *
     * @return int
     */
    public function getNodeNeutralizeAssist()
    {
        return $this->container['node_neutralize_assist'];
    }

    /**
     * Sets node_neutralize_assist
     *
     * @param int $node_neutralize_assist node_neutralize_assist
     *
     * @return $this
     */
    public function setNodeNeutralizeAssist($node_neutralize_assist)
    {
        $this->container['node_neutralize_assist'] = $node_neutralize_assist;

        return $this;
    }

    /**
     * Gets perk3_var2
     *
     * @return int
     */
    public function getPerk3Var2()
    {
        return $this->container['perk3_var2'];
    }

    /**
     * Sets perk3_var2
     *
     * @param int $perk3_var2 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk3Var2($perk3_var2)
    {
        $this->container['perk3_var2'] = $perk3_var2;

        return $this;
    }

    /**
     * Gets player_score9
     *
     * @return int
     */
    public function getPlayerScore9()
    {
        return $this->container['player_score9'];
    }

    /**
     * Sets player_score9
     *
     * @param int $player_score9 player_score9
     *
     * @return $this
     */
    public function setPlayerScore9($player_score9)
    {
        $this->container['player_score9'] = $player_score9;

        return $this;
    }

    /**
     * Gets player_score8
     *
     * @return int
     */
    public function getPlayerScore8()
    {
        return $this->container['player_score8'];
    }

    /**
     * Sets player_score8
     *
     * @param int $player_score8 player_score8
     *
     * @return $this
     */
    public function setPlayerScore8($player_score8)
    {
        $this->container['player_score8'] = $player_score8;

        return $this;
    }

    /**
     * Gets kills
     *
     * @return int
     */
    public function getKills()
    {
        return $this->container['kills'];
    }

    /**
     * Sets kills
     *
     * @param int $kills kills
     *
     * @return $this
     */
    public function setKills($kills)
    {
        $this->container['kills'] = $kills;

        return $this;
    }

    /**
     * Gets player_score1
     *
     * @return int
     */
    public function getPlayerScore1()
    {
        return $this->container['player_score1'];
    }

    /**
     * Sets player_score1
     *
     * @param int $player_score1 player_score1
     *
     * @return $this
     */
    public function setPlayerScore1($player_score1)
    {
        $this->container['player_score1'] = $player_score1;

        return $this;
    }

    /**
     * Gets player_score0
     *
     * @return int
     */
    public function getPlayerScore0()
    {
        return $this->container['player_score0'];
    }

    /**
     * Sets player_score0
     *
     * @param int $player_score0 player_score0
     *
     * @return $this
     */
    public function setPlayerScore0($player_score0)
    {
        $this->container['player_score0'] = $player_score0;

        return $this;
    }

    /**
     * Gets player_score3
     *
     * @return int
     */
    public function getPlayerScore3()
    {
        return $this->container['player_score3'];
    }

    /**
     * Sets player_score3
     *
     * @param int $player_score3 player_score3
     *
     * @return $this
     */
    public function setPlayerScore3($player_score3)
    {
        $this->container['player_score3'] = $player_score3;

        return $this;
    }

    /**
     * Gets player_score2
     *
     * @return int
     */
    public function getPlayerScore2()
    {
        return $this->container['player_score2'];
    }

    /**
     * Sets player_score2
     *
     * @param int $player_score2 player_score2
     *
     * @return $this
     */
    public function setPlayerScore2($player_score2)
    {
        $this->container['player_score2'] = $player_score2;

        return $this;
    }

    /**
     * Gets player_score5
     *
     * @return int
     */
    public function getPlayerScore5()
    {
        return $this->container['player_score5'];
    }

    /**
     * Sets player_score5
     *
     * @param int $player_score5 player_score5
     *
     * @return $this
     */
    public function setPlayerScore5($player_score5)
    {
        $this->container['player_score5'] = $player_score5;

        return $this;
    }

    /**
     * Gets player_score4
     *
     * @return int
     */
    public function getPlayerScore4()
    {
        return $this->container['player_score4'];
    }

    /**
     * Sets player_score4
     *
     * @param int $player_score4 player_score4
     *
     * @return $this
     */
    public function setPlayerScore4($player_score4)
    {
        $this->container['player_score4'] = $player_score4;

        return $this;
    }

    /**
     * Gets player_score7
     *
     * @return int
     */
    public function getPlayerScore7()
    {
        return $this->container['player_score7'];
    }

    /**
     * Sets player_score7
     *
     * @param int $player_score7 player_score7
     *
     * @return $this
     */
    public function setPlayerScore7($player_score7)
    {
        $this->container['player_score7'] = $player_score7;

        return $this;
    }

    /**
     * Gets player_score6
     *
     * @return int
     */
    public function getPlayerScore6()
    {
        return $this->container['player_score6'];
    }

    /**
     * Sets player_score6
     *
     * @param int $player_score6 player_score6
     *
     * @return $this
     */
    public function setPlayerScore6($player_score6)
    {
        $this->container['player_score6'] = $player_score6;

        return $this;
    }

    /**
     * Gets perk5_var1
     *
     * @return int
     */
    public function getPerk5Var1()
    {
        return $this->container['perk5_var1'];
    }

    /**
     * Sets perk5_var1
     *
     * @param int $perk5_var1 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk5Var1($perk5_var1)
    {
        $this->container['perk5_var1'] = $perk5_var1;

        return $this;
    }

    /**
     * Gets perk5_var3
     *
     * @return int
     */
    public function getPerk5Var3()
    {
        return $this->container['perk5_var3'];
    }

    /**
     * Sets perk5_var3
     *
     * @param int $perk5_var3 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk5Var3($perk5_var3)
    {
        $this->container['perk5_var3'] = $perk5_var3;

        return $this;
    }

    /**
     * Gets perk5_var2
     *
     * @return int
     */
    public function getPerk5Var2()
    {
        return $this->container['perk5_var2'];
    }

    /**
     * Sets perk5_var2
     *
     * @param int $perk5_var2 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk5Var2($perk5_var2)
    {
        $this->container['perk5_var2'] = $perk5_var2;

        return $this;
    }

    /**
     * Gets total_score_rank
     *
     * @return int
     */
    public function getTotalScoreRank()
    {
        return $this->container['total_score_rank'];
    }

    /**
     * Sets total_score_rank
     *
     * @param int $total_score_rank total_score_rank
     *
     * @return $this
     */
    public function setTotalScoreRank($total_score_rank)
    {
        $this->container['total_score_rank'] = $total_score_rank;

        return $this;
    }

    /**
     * Gets neutral_minions_killed
     *
     * @return int
     */
    public function getNeutralMinionsKilled()
    {
        return $this->container['neutral_minions_killed'];
    }

    /**
     * Sets neutral_minions_killed
     *
     * @param int $neutral_minions_killed neutral_minions_killed
     *
     * @return $this
     */
    public function setNeutralMinionsKilled($neutral_minions_killed)
    {
        $this->container['neutral_minions_killed'] = $neutral_minions_killed;

        return $this;
    }

    /**
     * Gets damage_dealt_to_turrets
     *
     * @return int
     */
    public function getDamageDealtToTurrets()
    {
        return $this->container['damage_dealt_to_turrets'];
    }

    /**
     * Sets damage_dealt_to_turrets
     *
     * @param int $damage_dealt_to_turrets damage_dealt_to_turrets
     *
     * @return $this
     */
    public function setDamageDealtToTurrets($damage_dealt_to_turrets)
    {
        $this->container['damage_dealt_to_turrets'] = $damage_dealt_to_turrets;

        return $this;
    }

    /**
     * Gets physical_damage_dealt_to_champions
     *
     * @return int
     */
    public function getPhysicalDamageDealtToChampions()
    {
        return $this->container['physical_damage_dealt_to_champions'];
    }

    /**
     * Sets physical_damage_dealt_to_champions
     *
     * @param int $physical_damage_dealt_to_champions physical_damage_dealt_to_champions
     *
     * @return $this
     */
    public function setPhysicalDamageDealtToChampions($physical_damage_dealt_to_champions)
    {
        $this->container['physical_damage_dealt_to_champions'] = $physical_damage_dealt_to_champions;

        return $this;
    }

    /**
     * Gets node_capture
     *
     * @return int
     */
    public function getNodeCapture()
    {
        return $this->container['node_capture'];
    }

    /**
     * Sets node_capture
     *
     * @param int $node_capture node_capture
     *
     * @return $this
     */
    public function setNodeCapture($node_capture)
    {
        $this->container['node_capture'] = $node_capture;

        return $this;
    }

    /**
     * Gets largest_multi_kill
     *
     * @return int
     */
    public function getLargestMultiKill()
    {
        return $this->container['largest_multi_kill'];
    }

    /**
     * Sets largest_multi_kill
     *
     * @param int $largest_multi_kill largest_multi_kill
     *
     * @return $this
     */
    public function setLargestMultiKill($largest_multi_kill)
    {
        $this->container['largest_multi_kill'] = $largest_multi_kill;

        return $this;
    }

    /**
     * Gets perk2_var2
     *
     * @return int
     */
    public function getPerk2Var2()
    {
        return $this->container['perk2_var2'];
    }

    /**
     * Sets perk2_var2
     *
     * @param int $perk2_var2 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk2Var2($perk2_var2)
    {
        $this->container['perk2_var2'] = $perk2_var2;

        return $this;
    }

    /**
     * Gets perk2_var3
     *
     * @return int
     */
    public function getPerk2Var3()
    {
        return $this->container['perk2_var3'];
    }

    /**
     * Sets perk2_var3
     *
     * @param int $perk2_var3 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk2Var3($perk2_var3)
    {
        $this->container['perk2_var3'] = $perk2_var3;

        return $this;
    }

    /**
     * Gets total_units_healed
     *
     * @return int
     */
    public function getTotalUnitsHealed()
    {
        return $this->container['total_units_healed'];
    }

    /**
     * Sets total_units_healed
     *
     * @param int $total_units_healed total_units_healed
     *
     * @return $this
     */
    public function setTotalUnitsHealed($total_units_healed)
    {
        $this->container['total_units_healed'] = $total_units_healed;

        return $this;
    }

    /**
     * Gets perk2_var1
     *
     * @return int
     */
    public function getPerk2Var1()
    {
        return $this->container['perk2_var1'];
    }

    /**
     * Sets perk2_var1
     *
     * @param int $perk2_var1 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk2Var1($perk2_var1)
    {
        $this->container['perk2_var1'] = $perk2_var1;

        return $this;
    }

    /**
     * Gets perk4_var1
     *
     * @return int
     */
    public function getPerk4Var1()
    {
        return $this->container['perk4_var1'];
    }

    /**
     * Sets perk4_var1
     *
     * @param int $perk4_var1 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk4Var1($perk4_var1)
    {
        $this->container['perk4_var1'] = $perk4_var1;

        return $this;
    }

    /**
     * Gets perk4_var2
     *
     * @return int
     */
    public function getPerk4Var2()
    {
        return $this->container['perk4_var2'];
    }

    /**
     * Sets perk4_var2
     *
     * @param int $perk4_var2 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk4Var2($perk4_var2)
    {
        $this->container['perk4_var2'] = $perk4_var2;

        return $this;
    }

    /**
     * Gets perk4_var3
     *
     * @return int
     */
    public function getPerk4Var3()
    {
        return $this->container['perk4_var3'];
    }

    /**
     * Sets perk4_var3
     *
     * @param int $perk4_var3 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk4Var3($perk4_var3)
    {
        $this->container['perk4_var3'] = $perk4_var3;

        return $this;
    }

    /**
     * Gets wards_killed
     *
     * @return int
     */
    public function getWardsKilled()
    {
        return $this->container['wards_killed'];
    }

    /**
     * Sets wards_killed
     *
     * @param int $wards_killed wards_killed
     *
     * @return $this
     */
    public function setWardsKilled($wards_killed)
    {
        $this->container['wards_killed'] = $wards_killed;

        return $this;
    }

    /**
     * Gets largest_critical_strike
     *
     * @return int
     */
    public function getLargestCriticalStrike()
    {
        return $this->container['largest_critical_strike'];
    }

    /**
     * Sets largest_critical_strike
     *
     * @param int $largest_critical_strike largest_critical_strike
     *
     * @return $this
     */
    public function setLargestCriticalStrike($largest_critical_strike)
    {
        $this->container['largest_critical_strike'] = $largest_critical_strike;

        return $this;
    }

    /**
     * Gets largest_killing_spree
     *
     * @return int
     */
    public function getLargestKillingSpree()
    {
        return $this->container['largest_killing_spree'];
    }

    /**
     * Sets largest_killing_spree
     *
     * @param int $largest_killing_spree largest_killing_spree
     *
     * @return $this
     */
    public function setLargestKillingSpree($largest_killing_spree)
    {
        $this->container['largest_killing_spree'] = $largest_killing_spree;

        return $this;
    }

    /**
     * Gets quadra_kills
     *
     * @return int
     */
    public function getQuadraKills()
    {
        return $this->container['quadra_kills'];
    }

    /**
     * Sets quadra_kills
     *
     * @param int $quadra_kills quadra_kills
     *
     * @return $this
     */
    public function setQuadraKills($quadra_kills)
    {
        $this->container['quadra_kills'] = $quadra_kills;

        return $this;
    }

    /**
     * Gets team_objective
     *
     * @return int
     */
    public function getTeamObjective()
    {
        return $this->container['team_objective'];
    }

    /**
     * Sets team_objective
     *
     * @param int $team_objective team_objective
     *
     * @return $this
     */
    public function setTeamObjective($team_objective)
    {
        $this->container['team_objective'] = $team_objective;

        return $this;
    }

    /**
     * Gets magic_damage_dealt
     *
     * @return int
     */
    public function getMagicDamageDealt()
    {
        return $this->container['magic_damage_dealt'];
    }

    /**
     * Sets magic_damage_dealt
     *
     * @param int $magic_damage_dealt magic_damage_dealt
     *
     * @return $this
     */
    public function setMagicDamageDealt($magic_damage_dealt)
    {
        $this->container['magic_damage_dealt'] = $magic_damage_dealt;

        return $this;
    }

    /**
     * Gets item2
     *
     * @return int
     */
    public function getItem2()
    {
        return $this->container['item2'];
    }

    /**
     * Sets item2
     *
     * @param int $item2 item2
     *
     * @return $this
     */
    public function setItem2($item2)
    {
        $this->container['item2'] = $item2;

        return $this;
    }

    /**
     * Gets item3
     *
     * @return int
     */
    public function getItem3()
    {
        return $this->container['item3'];
    }

    /**
     * Sets item3
     *
     * @param int $item3 item3
     *
     * @return $this
     */
    public function setItem3($item3)
    {
        $this->container['item3'] = $item3;

        return $this;
    }

    /**
     * Gets item0
     *
     * @return int
     */
    public function getItem0()
    {
        return $this->container['item0'];
    }

    /**
     * Sets item0
     *
     * @param int $item0 item0
     *
     * @return $this
     */
    public function setItem0($item0)
    {
        $this->container['item0'] = $item0;

        return $this;
    }

    /**
     * Gets neutral_minions_killed_team_jungle
     *
     * @return int
     */
    public function getNeutralMinionsKilledTeamJungle()
    {
        return $this->container['neutral_minions_killed_team_jungle'];
    }

    /**
     * Sets neutral_minions_killed_team_jungle
     *
     * @param int $neutral_minions_killed_team_jungle neutral_minions_killed_team_jungle
     *
     * @return $this
     */
    public function setNeutralMinionsKilledTeamJungle($neutral_minions_killed_team_jungle)
    {
        $this->container['neutral_minions_killed_team_jungle'] = $neutral_minions_killed_team_jungle;

        return $this;
    }

    /**
     * Gets item6
     *
     * @return int
     */
    public function getItem6()
    {
        return $this->container['item6'];
    }

    /**
     * Sets item6
     *
     * @param int $item6 item6
     *
     * @return $this
     */
    public function setItem6($item6)
    {
        $this->container['item6'] = $item6;

        return $this;
    }

    /**
     * Gets item4
     *
     * @return int
     */
    public function getItem4()
    {
        return $this->container['item4'];
    }

    /**
     * Sets item4
     *
     * @param int $item4 item4
     *
     * @return $this
     */
    public function setItem4($item4)
    {
        $this->container['item4'] = $item4;

        return $this;
    }

    /**
     * Gets item5
     *
     * @return int
     */
    public function getItem5()
    {
        return $this->container['item5'];
    }

    /**
     * Sets item5
     *
     * @param int $item5 item5
     *
     * @return $this
     */
    public function setItem5($item5)
    {
        $this->container['item5'] = $item5;

        return $this;
    }

    /**
     * Gets perk1
     *
     * @return int
     */
    public function getPerk1()
    {
        return $this->container['perk1'];
    }

    /**
     * Sets perk1
     *
     * @param int $perk1 Primary path rune.
     *
     * @return $this
     */
    public function setPerk1($perk1)
    {
        $this->container['perk1'] = $perk1;

        return $this;
    }

    /**
     * Gets perk0
     *
     * @return int
     */
    public function getPerk0()
    {
        return $this->container['perk0'];
    }

    /**
     * Sets perk0
     *
     * @param int $perk0 Primary path keystone rune.
     *
     * @return $this
     */
    public function setPerk0($perk0)
    {
        $this->container['perk0'] = $perk0;

        return $this;
    }

    /**
     * Gets perk3
     *
     * @return int
     */
    public function getPerk3()
    {
        return $this->container['perk3'];
    }

    /**
     * Sets perk3
     *
     * @param int $perk3 Primary path rune.
     *
     * @return $this
     */
    public function setPerk3($perk3)
    {
        $this->container['perk3'] = $perk3;

        return $this;
    }

    /**
     * Gets perk2
     *
     * @return int
     */
    public function getPerk2()
    {
        return $this->container['perk2'];
    }

    /**
     * Sets perk2
     *
     * @param int $perk2 Primary path rune.
     *
     * @return $this
     */
    public function setPerk2($perk2)
    {
        $this->container['perk2'] = $perk2;

        return $this;
    }

    /**
     * Gets perk5
     *
     * @return int
     */
    public function getPerk5()
    {
        return $this->container['perk5'];
    }

    /**
     * Sets perk5
     *
     * @param int $perk5 Secondary path rune.
     *
     * @return $this
     */
    public function setPerk5($perk5)
    {
        $this->container['perk5'] = $perk5;

        return $this;
    }

    /**
     * Gets perk4
     *
     * @return int
     */
    public function getPerk4()
    {
        return $this->container['perk4'];
    }

    /**
     * Sets perk4
     *
     * @param int $perk4 Secondary path rune.
     *
     * @return $this
     */
    public function setPerk4($perk4)
    {
        $this->container['perk4'] = $perk4;

        return $this;
    }

    /**
     * Gets perk3_var1
     *
     * @return int
     */
    public function getPerk3Var1()
    {
        return $this->container['perk3_var1'];
    }

    /**
     * Sets perk3_var1
     *
     * @param int $perk3_var1 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk3Var1($perk3_var1)
    {
        $this->container['perk3_var1'] = $perk3_var1;

        return $this;
    }

    /**
     * Gets damage_self_mitigated
     *
     * @return int
     */
    public function getDamageSelfMitigated()
    {
        return $this->container['damage_self_mitigated'];
    }

    /**
     * Sets damage_self_mitigated
     *
     * @param int $damage_self_mitigated damage_self_mitigated
     *
     * @return $this
     */
    public function setDamageSelfMitigated($damage_self_mitigated)
    {
        $this->container['damage_self_mitigated'] = $damage_self_mitigated;

        return $this;
    }

    /**
     * Gets magical_damage_taken
     *
     * @return int
     */
    public function getMagicalDamageTaken()
    {
        return $this->container['magical_damage_taken'];
    }

    /**
     * Sets magical_damage_taken
     *
     * @param int $magical_damage_taken magical_damage_taken
     *
     * @return $this
     */
    public function setMagicalDamageTaken($magical_damage_taken)
    {
        $this->container['magical_damage_taken'] = $magical_damage_taken;

        return $this;
    }

    /**
     * Gets first_inhibitor_kill
     *
     * @return bool
     */
    public function getFirstInhibitorKill()
    {
        return $this->container['first_inhibitor_kill'];
    }

    /**
     * Sets first_inhibitor_kill
     *
     * @param bool $first_inhibitor_kill first_inhibitor_kill
     *
     * @return $this
     */
    public function setFirstInhibitorKill($first_inhibitor_kill)
    {
        $this->container['first_inhibitor_kill'] = $first_inhibitor_kill;

        return $this;
    }

    /**
     * Gets true_damage_taken
     *
     * @return int
     */
    public function getTrueDamageTaken()
    {
        return $this->container['true_damage_taken'];
    }

    /**
     * Sets true_damage_taken
     *
     * @param int $true_damage_taken true_damage_taken
     *
     * @return $this
     */
    public function setTrueDamageTaken($true_damage_taken)
    {
        $this->container['true_damage_taken'] = $true_damage_taken;

        return $this;
    }

    /**
     * Gets node_neutralize
     *
     * @return int
     */
    public function getNodeNeutralize()
    {
        return $this->container['node_neutralize'];
    }

    /**
     * Sets node_neutralize
     *
     * @param int $node_neutralize node_neutralize
     *
     * @return $this
     */
    public function setNodeNeutralize($node_neutralize)
    {
        $this->container['node_neutralize'] = $node_neutralize;

        return $this;
    }

    /**
     * Gets assists
     *
     * @return int
     */
    public function getAssists()
    {
        return $this->container['assists'];
    }

    /**
     * Sets assists
     *
     * @param int $assists assists
     *
     * @return $this
     */
    public function setAssists($assists)
    {
        $this->container['assists'] = $assists;

        return $this;
    }

    /**
     * Gets combat_player_score
     *
     * @return int
     */
    public function getCombatPlayerScore()
    {
        return $this->container['combat_player_score'];
    }

    /**
     * Sets combat_player_score
     *
     * @param int $combat_player_score combat_player_score
     *
     * @return $this
     */
    public function setCombatPlayerScore($combat_player_score)
    {
        $this->container['combat_player_score'] = $combat_player_score;

        return $this;
    }

    /**
     * Gets perk_primary_style
     *
     * @return int
     */
    public function getPerkPrimaryStyle()
    {
        return $this->container['perk_primary_style'];
    }

    /**
     * Sets perk_primary_style
     *
     * @param int $perk_primary_style Primary rune path
     *
     * @return $this
     */
    public function setPerkPrimaryStyle($perk_primary_style)
    {
        $this->container['perk_primary_style'] = $perk_primary_style;

        return $this;
    }

    /**
     * Gets gold_spent
     *
     * @return int
     */
    public function getGoldSpent()
    {
        return $this->container['gold_spent'];
    }

    /**
     * Sets gold_spent
     *
     * @param int $gold_spent gold_spent
     *
     * @return $this
     */
    public function setGoldSpent($gold_spent)
    {
        $this->container['gold_spent'] = $gold_spent;

        return $this;
    }

    /**
     * Gets true_damage_dealt
     *
     * @return int
     */
    public function getTrueDamageDealt()
    {
        return $this->container['true_damage_dealt'];
    }

    /**
     * Sets true_damage_dealt
     *
     * @param int $true_damage_dealt true_damage_dealt
     *
     * @return $this
     */
    public function setTrueDamageDealt($true_damage_dealt)
    {
        $this->container['true_damage_dealt'] = $true_damage_dealt;

        return $this;
    }

    /**
     * Gets participant_id
     *
     * @return int
     */
    public function getParticipantId()
    {
        return $this->container['participant_id'];
    }

    /**
     * Sets participant_id
     *
     * @param int $participant_id participant_id
     *
     * @return $this
     */
    public function setParticipantId($participant_id)
    {
        $this->container['participant_id'] = $participant_id;

        return $this;
    }

    /**
     * Gets total_damage_taken
     *
     * @return int
     */
    public function getTotalDamageTaken()
    {
        return $this->container['total_damage_taken'];
    }

    /**
     * Sets total_damage_taken
     *
     * @param int $total_damage_taken total_damage_taken
     *
     * @return $this
     */
    public function setTotalDamageTaken($total_damage_taken)
    {
        $this->container['total_damage_taken'] = $total_damage_taken;

        return $this;
    }

    /**
     * Gets physical_damage_dealt
     *
     * @return int
     */
    public function getPhysicalDamageDealt()
    {
        return $this->container['physical_damage_dealt'];
    }

    /**
     * Sets physical_damage_dealt
     *
     * @param int $physical_damage_dealt physical_damage_dealt
     *
     * @return $this
     */
    public function setPhysicalDamageDealt($physical_damage_dealt)
    {
        $this->container['physical_damage_dealt'] = $physical_damage_dealt;

        return $this;
    }

    /**
     * Gets sight_wards_bought_in_game
     *
     * @return int
     */
    public function getSightWardsBoughtInGame()
    {
        return $this->container['sight_wards_bought_in_game'];
    }

    /**
     * Sets sight_wards_bought_in_game
     *
     * @param int $sight_wards_bought_in_game sight_wards_bought_in_game
     *
     * @return $this
     */
    public function setSightWardsBoughtInGame($sight_wards_bought_in_game)
    {
        $this->container['sight_wards_bought_in_game'] = $sight_wards_bought_in_game;

        return $this;
    }

    /**
     * Gets total_damage_dealt_to_champions
     *
     * @return int
     */
    public function getTotalDamageDealtToChampions()
    {
        return $this->container['total_damage_dealt_to_champions'];
    }

    /**
     * Sets total_damage_dealt_to_champions
     *
     * @param int $total_damage_dealt_to_champions total_damage_dealt_to_champions
     *
     * @return $this
     */
    public function setTotalDamageDealtToChampions($total_damage_dealt_to_champions)
    {
        $this->container['total_damage_dealt_to_champions'] = $total_damage_dealt_to_champions;

        return $this;
    }

    /**
     * Gets physical_damage_taken
     *
     * @return int
     */
    public function getPhysicalDamageTaken()
    {
        return $this->container['physical_damage_taken'];
    }

    /**
     * Sets physical_damage_taken
     *
     * @param int $physical_damage_taken physical_damage_taken
     *
     * @return $this
     */
    public function setPhysicalDamageTaken($physical_damage_taken)
    {
        $this->container['physical_damage_taken'] = $physical_damage_taken;

        return $this;
    }

    /**
     * Gets total_player_score
     *
     * @return int
     */
    public function getTotalPlayerScore()
    {
        return $this->container['total_player_score'];
    }

    /**
     * Sets total_player_score
     *
     * @param int $total_player_score total_player_score
     *
     * @return $this
     */
    public function setTotalPlayerScore($total_player_score)
    {
        $this->container['total_player_score'] = $total_player_score;

        return $this;
    }

    /**
     * Gets win
     *
     * @return bool
     */
    public function getWin()
    {
        return $this->container['win'];
    }

    /**
     * Sets win
     *
     * @param bool $win win
     *
     * @return $this
     */
    public function setWin($win)
    {
        $this->container['win'] = $win;

        return $this;
    }

    /**
     * Gets objective_player_score
     *
     * @return int
     */
    public function getObjectivePlayerScore()
    {
        return $this->container['objective_player_score'];
    }

    /**
     * Sets objective_player_score
     *
     * @param int $objective_player_score objective_player_score
     *
     * @return $this
     */
    public function setObjectivePlayerScore($objective_player_score)
    {
        $this->container['objective_player_score'] = $objective_player_score;

        return $this;
    }

    /**
     * Gets total_damage_dealt
     *
     * @return int
     */
    public function getTotalDamageDealt()
    {
        return $this->container['total_damage_dealt'];
    }

    /**
     * Sets total_damage_dealt
     *
     * @param int $total_damage_dealt total_damage_dealt
     *
     * @return $this
     */
    public function setTotalDamageDealt($total_damage_dealt)
    {
        $this->container['total_damage_dealt'] = $total_damage_dealt;

        return $this;
    }

    /**
     * Gets item1
     *
     * @return int
     */
    public function getItem1()
    {
        return $this->container['item1'];
    }

    /**
     * Sets item1
     *
     * @param int $item1 item1
     *
     * @return $this
     */
    public function setItem1($item1)
    {
        $this->container['item1'] = $item1;

        return $this;
    }

    /**
     * Gets neutral_minions_killed_enemy_jungle
     *
     * @return int
     */
    public function getNeutralMinionsKilledEnemyJungle()
    {
        return $this->container['neutral_minions_killed_enemy_jungle'];
    }

    /**
     * Sets neutral_minions_killed_enemy_jungle
     *
     * @param int $neutral_minions_killed_enemy_jungle neutral_minions_killed_enemy_jungle
     *
     * @return $this
     */
    public function setNeutralMinionsKilledEnemyJungle($neutral_minions_killed_enemy_jungle)
    {
        $this->container['neutral_minions_killed_enemy_jungle'] = $neutral_minions_killed_enemy_jungle;

        return $this;
    }

    /**
     * Gets deaths
     *
     * @return int
     */
    public function getDeaths()
    {
        return $this->container['deaths'];
    }

    /**
     * Sets deaths
     *
     * @param int $deaths deaths
     *
     * @return $this
     */
    public function setDeaths($deaths)
    {
        $this->container['deaths'] = $deaths;

        return $this;
    }

    /**
     * Gets wards_placed
     *
     * @return int
     */
    public function getWardsPlaced()
    {
        return $this->container['wards_placed'];
    }

    /**
     * Sets wards_placed
     *
     * @param int $wards_placed wards_placed
     *
     * @return $this
     */
    public function setWardsPlaced($wards_placed)
    {
        $this->container['wards_placed'] = $wards_placed;

        return $this;
    }

    /**
     * Gets perk_sub_style
     *
     * @return int
     */
    public function getPerkSubStyle()
    {
        return $this->container['perk_sub_style'];
    }

    /**
     * Sets perk_sub_style
     *
     * @param int $perk_sub_style Secondary rune path
     *
     * @return $this
     */
    public function setPerkSubStyle($perk_sub_style)
    {
        $this->container['perk_sub_style'] = $perk_sub_style;

        return $this;
    }

    /**
     * Gets turret_kills
     *
     * @return int
     */
    public function getTurretKills()
    {
        return $this->container['turret_kills'];
    }

    /**
     * Sets turret_kills
     *
     * @param int $turret_kills turret_kills
     *
     * @return $this
     */
    public function setTurretKills($turret_kills)
    {
        $this->container['turret_kills'] = $turret_kills;

        return $this;
    }

    /**
     * Gets first_blood_kill
     *
     * @return bool
     */
    public function getFirstBloodKill()
    {
        return $this->container['first_blood_kill'];
    }

    /**
     * Sets first_blood_kill
     *
     * @param bool $first_blood_kill first_blood_kill
     *
     * @return $this
     */
    public function setFirstBloodKill($first_blood_kill)
    {
        $this->container['first_blood_kill'] = $first_blood_kill;

        return $this;
    }

    /**
     * Gets true_damage_dealt_to_champions
     *
     * @return int
     */
    public function getTrueDamageDealtToChampions()
    {
        return $this->container['true_damage_dealt_to_champions'];
    }

    /**
     * Sets true_damage_dealt_to_champions
     *
     * @param int $true_damage_dealt_to_champions true_damage_dealt_to_champions
     *
     * @return $this
     */
    public function setTrueDamageDealtToChampions($true_damage_dealt_to_champions)
    {
        $this->container['true_damage_dealt_to_champions'] = $true_damage_dealt_to_champions;

        return $this;
    }

    /**
     * Gets gold_earned
     *
     * @return int
     */
    public function getGoldEarned()
    {
        return $this->container['gold_earned'];
    }

    /**
     * Sets gold_earned
     *
     * @param int $gold_earned gold_earned
     *
     * @return $this
     */
    public function setGoldEarned($gold_earned)
    {
        $this->container['gold_earned'] = $gold_earned;

        return $this;
    }

    /**
     * Gets killing_sprees
     *
     * @return int
     */
    public function getKillingSprees()
    {
        return $this->container['killing_sprees'];
    }

    /**
     * Sets killing_sprees
     *
     * @param int $killing_sprees killing_sprees
     *
     * @return $this
     */
    public function setKillingSprees($killing_sprees)
    {
        $this->container['killing_sprees'] = $killing_sprees;

        return $this;
    }

    /**
     * Gets unreal_kills
     *
     * @return int
     */
    public function getUnrealKills()
    {
        return $this->container['unreal_kills'];
    }

    /**
     * Sets unreal_kills
     *
     * @param int $unreal_kills unreal_kills
     *
     * @return $this
     */
    public function setUnrealKills($unreal_kills)
    {
        $this->container['unreal_kills'] = $unreal_kills;

        return $this;
    }

    /**
     * Gets altars_captured
     *
     * @return int
     */
    public function getAltarsCaptured()
    {
        return $this->container['altars_captured'];
    }

    /**
     * Sets altars_captured
     *
     * @param int $altars_captured altars_captured
     *
     * @return $this
     */
    public function setAltarsCaptured($altars_captured)
    {
        $this->container['altars_captured'] = $altars_captured;

        return $this;
    }

    /**
     * Gets first_tower_assist
     *
     * @return bool
     */
    public function getFirstTowerAssist()
    {
        return $this->container['first_tower_assist'];
    }

    /**
     * Sets first_tower_assist
     *
     * @param bool $first_tower_assist first_tower_assist
     *
     * @return $this
     */
    public function setFirstTowerAssist($first_tower_assist)
    {
        $this->container['first_tower_assist'] = $first_tower_assist;

        return $this;
    }

    /**
     * Gets first_tower_kill
     *
     * @return bool
     */
    public function getFirstTowerKill()
    {
        return $this->container['first_tower_kill'];
    }

    /**
     * Sets first_tower_kill
     *
     * @param bool $first_tower_kill first_tower_kill
     *
     * @return $this
     */
    public function setFirstTowerKill($first_tower_kill)
    {
        $this->container['first_tower_kill'] = $first_tower_kill;

        return $this;
    }

    /**
     * Gets champ_level
     *
     * @return int
     */
    public function getChampLevel()
    {
        return $this->container['champ_level'];
    }

    /**
     * Sets champ_level
     *
     * @param int $champ_level champ_level
     *
     * @return $this
     */
    public function setChampLevel($champ_level)
    {
        $this->container['champ_level'] = $champ_level;

        return $this;
    }

    /**
     * Gets double_kills
     *
     * @return int
     */
    public function getDoubleKills()
    {
        return $this->container['double_kills'];
    }

    /**
     * Sets double_kills
     *
     * @param int $double_kills double_kills
     *
     * @return $this
     */
    public function setDoubleKills($double_kills)
    {
        $this->container['double_kills'] = $double_kills;

        return $this;
    }

    /**
     * Gets node_capture_assist
     *
     * @return int
     */
    public function getNodeCaptureAssist()
    {
        return $this->container['node_capture_assist'];
    }

    /**
     * Sets node_capture_assist
     *
     * @param int $node_capture_assist node_capture_assist
     *
     * @return $this
     */
    public function setNodeCaptureAssist($node_capture_assist)
    {
        $this->container['node_capture_assist'] = $node_capture_assist;

        return $this;
    }

    /**
     * Gets inhibitor_kills
     *
     * @return int
     */
    public function getInhibitorKills()
    {
        return $this->container['inhibitor_kills'];
    }

    /**
     * Sets inhibitor_kills
     *
     * @param int $inhibitor_kills inhibitor_kills
     *
     * @return $this
     */
    public function setInhibitorKills($inhibitor_kills)
    {
        $this->container['inhibitor_kills'] = $inhibitor_kills;

        return $this;
    }

    /**
     * Gets first_inhibitor_assist
     *
     * @return bool
     */
    public function getFirstInhibitorAssist()
    {
        return $this->container['first_inhibitor_assist'];
    }

    /**
     * Sets first_inhibitor_assist
     *
     * @param bool $first_inhibitor_assist first_inhibitor_assist
     *
     * @return $this
     */
    public function setFirstInhibitorAssist($first_inhibitor_assist)
    {
        $this->container['first_inhibitor_assist'] = $first_inhibitor_assist;

        return $this;
    }

    /**
     * Gets perk0_var1
     *
     * @return int
     */
    public function getPerk0Var1()
    {
        return $this->container['perk0_var1'];
    }

    /**
     * Sets perk0_var1
     *
     * @param int $perk0_var1 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk0Var1($perk0_var1)
    {
        $this->container['perk0_var1'] = $perk0_var1;

        return $this;
    }

    /**
     * Gets perk0_var2
     *
     * @return int
     */
    public function getPerk0Var2()
    {
        return $this->container['perk0_var2'];
    }

    /**
     * Sets perk0_var2
     *
     * @param int $perk0_var2 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk0Var2($perk0_var2)
    {
        $this->container['perk0_var2'] = $perk0_var2;

        return $this;
    }

    /**
     * Gets perk0_var3
     *
     * @return int
     */
    public function getPerk0Var3()
    {
        return $this->container['perk0_var3'];
    }

    /**
     * Sets perk0_var3
     *
     * @param int $perk0_var3 Post game rune stats.
     *
     * @return $this
     */
    public function setPerk0Var3($perk0_var3)
    {
        $this->container['perk0_var3'] = $perk0_var3;

        return $this;
    }

    /**
     * Gets vision_wards_bought_in_game
     *
     * @return int
     */
    public function getVisionWardsBoughtInGame()
    {
        return $this->container['vision_wards_bought_in_game'];
    }

    /**
     * Sets vision_wards_bought_in_game
     *
     * @param int $vision_wards_bought_in_game vision_wards_bought_in_game
     *
     * @return $this
     */
    public function setVisionWardsBoughtInGame($vision_wards_bought_in_game)
    {
        $this->container['vision_wards_bought_in_game'] = $vision_wards_bought_in_game;

        return $this;
    }

    /**
     * Gets altars_neutralized
     *
     * @return int
     */
    public function getAltarsNeutralized()
    {
        return $this->container['altars_neutralized'];
    }

    /**
     * Sets altars_neutralized
     *
     * @param int $altars_neutralized altars_neutralized
     *
     * @return $this
     */
    public function setAltarsNeutralized($altars_neutralized)
    {
        $this->container['altars_neutralized'] = $altars_neutralized;

        return $this;
    }

    /**
     * Gets penta_kills
     *
     * @return int
     */
    public function getPentaKills()
    {
        return $this->container['penta_kills'];
    }

    /**
     * Sets penta_kills
     *
     * @param int $penta_kills penta_kills
     *
     * @return $this
     */
    public function setPentaKills($penta_kills)
    {
        $this->container['penta_kills'] = $penta_kills;

        return $this;
    }

    /**
     * Gets total_heal
     *
     * @return int
     */
    public function getTotalHeal()
    {
        return $this->container['total_heal'];
    }

    /**
     * Sets total_heal
     *
     * @param int $total_heal total_heal
     *
     * @return $this
     */
    public function setTotalHeal($total_heal)
    {
        $this->container['total_heal'] = $total_heal;

        return $this;
    }

    /**
     * Gets total_minions_killed
     *
     * @return int
     */
    public function getTotalMinionsKilled()
    {
        return $this->container['total_minions_killed'];
    }

    /**
     * Sets total_minions_killed
     *
     * @param int $total_minions_killed total_minions_killed
     *
     * @return $this
     */
    public function setTotalMinionsKilled($total_minions_killed)
    {
        $this->container['total_minions_killed'] = $total_minions_killed;

        return $this;
    }

    /**
     * Gets time_c_cing_others
     *
     * @return int
     */
    public function getTimeCCingOthers()
    {
        return $this->container['time_c_cing_others'];
    }

    /**
     * Sets time_c_cing_others
     *
     * @param int $time_c_cing_others time_c_cing_others
     *
     * @return $this
     */
    public function setTimeCCingOthers($time_c_cing_others)
    {
        $this->container['time_c_cing_others'] = $time_c_cing_others;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


