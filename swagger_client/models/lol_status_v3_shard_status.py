# coding: utf-8

"""
    Riot API

     OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. ***   # noqa: E501

    OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.lol_status_v3_service import LolStatusV3Service  # noqa: F401,E501


class LolStatusV3ShardStatus(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'region_tag': 'str',
        'hostname': 'str',
        'services': 'list[LolStatusV3Service]',
        'slug': 'str',
        'locales': 'list[str]'
    }

    attribute_map = {
        'name': 'name',
        'region_tag': 'region_tag',
        'hostname': 'hostname',
        'services': 'services',
        'slug': 'slug',
        'locales': 'locales'
    }

    def __init__(self, name=None, region_tag=None, hostname=None, services=None, slug=None, locales=None):  # noqa: E501
        """LolStatusV3ShardStatus - a model defined in Swagger"""  # noqa: E501

        self._name = None
        self._region_tag = None
        self._hostname = None
        self._services = None
        self._slug = None
        self._locales = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if region_tag is not None:
            self.region_tag = region_tag
        if hostname is not None:
            self.hostname = hostname
        if services is not None:
            self.services = services
        if slug is not None:
            self.slug = slug
        if locales is not None:
            self.locales = locales

    @property
    def name(self):
        """Gets the name of this LolStatusV3ShardStatus.  # noqa: E501


        :return: The name of this LolStatusV3ShardStatus.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LolStatusV3ShardStatus.


        :param name: The name of this LolStatusV3ShardStatus.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def region_tag(self):
        """Gets the region_tag of this LolStatusV3ShardStatus.  # noqa: E501


        :return: The region_tag of this LolStatusV3ShardStatus.  # noqa: E501
        :rtype: str
        """
        return self._region_tag

    @region_tag.setter
    def region_tag(self, region_tag):
        """Sets the region_tag of this LolStatusV3ShardStatus.


        :param region_tag: The region_tag of this LolStatusV3ShardStatus.  # noqa: E501
        :type: str
        """

        self._region_tag = region_tag

    @property
    def hostname(self):
        """Gets the hostname of this LolStatusV3ShardStatus.  # noqa: E501


        :return: The hostname of this LolStatusV3ShardStatus.  # noqa: E501
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this LolStatusV3ShardStatus.


        :param hostname: The hostname of this LolStatusV3ShardStatus.  # noqa: E501
        :type: str
        """

        self._hostname = hostname

    @property
    def services(self):
        """Gets the services of this LolStatusV3ShardStatus.  # noqa: E501


        :return: The services of this LolStatusV3ShardStatus.  # noqa: E501
        :rtype: list[LolStatusV3Service]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this LolStatusV3ShardStatus.


        :param services: The services of this LolStatusV3ShardStatus.  # noqa: E501
        :type: list[LolStatusV3Service]
        """

        self._services = services

    @property
    def slug(self):
        """Gets the slug of this LolStatusV3ShardStatus.  # noqa: E501


        :return: The slug of this LolStatusV3ShardStatus.  # noqa: E501
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this LolStatusV3ShardStatus.


        :param slug: The slug of this LolStatusV3ShardStatus.  # noqa: E501
        :type: str
        """

        self._slug = slug

    @property
    def locales(self):
        """Gets the locales of this LolStatusV3ShardStatus.  # noqa: E501


        :return: The locales of this LolStatusV3ShardStatus.  # noqa: E501
        :rtype: list[str]
        """
        return self._locales

    @locales.setter
    def locales(self, locales):
        """Sets the locales of this LolStatusV3ShardStatus.


        :param locales: The locales of this LolStatusV3ShardStatus.  # noqa: E501
        :type: list[str]
        """

        self._locales = locales

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LolStatusV3ShardStatus, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LolStatusV3ShardStatus):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
