# coding: utf-8

"""
    Riot API

     OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. ***   # noqa: E501

    OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SummonerV4SummonerDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'profile_icon_id': 'int',
        'name': 'str',
        'puuid': 'str',
        'summoner_level': 'int',
        'revision_date': 'int',
        'id': 'str',
        'account_id': 'str'
    }

    attribute_map = {
        'profile_icon_id': 'profileIconId',
        'name': 'name',
        'puuid': 'puuid',
        'summoner_level': 'summonerLevel',
        'revision_date': 'revisionDate',
        'id': 'id',
        'account_id': 'accountId'
    }

    def __init__(self, profile_icon_id=None, name=None, puuid=None, summoner_level=None, revision_date=None, id=None, account_id=None):  # noqa: E501
        """SummonerV4SummonerDTO - a model defined in Swagger"""  # noqa: E501

        self._profile_icon_id = None
        self._name = None
        self._puuid = None
        self._summoner_level = None
        self._revision_date = None
        self._id = None
        self._account_id = None
        self.discriminator = None

        if profile_icon_id is not None:
            self.profile_icon_id = profile_icon_id
        if name is not None:
            self.name = name
        if puuid is not None:
            self.puuid = puuid
        if summoner_level is not None:
            self.summoner_level = summoner_level
        if revision_date is not None:
            self.revision_date = revision_date
        if id is not None:
            self.id = id
        if account_id is not None:
            self.account_id = account_id

    @property
    def profile_icon_id(self):
        """Gets the profile_icon_id of this SummonerV4SummonerDTO.  # noqa: E501

        ID of the summoner icon associated with the summoner.  # noqa: E501

        :return: The profile_icon_id of this SummonerV4SummonerDTO.  # noqa: E501
        :rtype: int
        """
        return self._profile_icon_id

    @profile_icon_id.setter
    def profile_icon_id(self, profile_icon_id):
        """Sets the profile_icon_id of this SummonerV4SummonerDTO.

        ID of the summoner icon associated with the summoner.  # noqa: E501

        :param profile_icon_id: The profile_icon_id of this SummonerV4SummonerDTO.  # noqa: E501
        :type: int
        """

        self._profile_icon_id = profile_icon_id

    @property
    def name(self):
        """Gets the name of this SummonerV4SummonerDTO.  # noqa: E501

        Summoner name.  # noqa: E501

        :return: The name of this SummonerV4SummonerDTO.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SummonerV4SummonerDTO.

        Summoner name.  # noqa: E501

        :param name: The name of this SummonerV4SummonerDTO.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def puuid(self):
        """Gets the puuid of this SummonerV4SummonerDTO.  # noqa: E501

        Encrypted PUUID. Exact length of 78 characters.  # noqa: E501

        :return: The puuid of this SummonerV4SummonerDTO.  # noqa: E501
        :rtype: str
        """
        return self._puuid

    @puuid.setter
    def puuid(self, puuid):
        """Sets the puuid of this SummonerV4SummonerDTO.

        Encrypted PUUID. Exact length of 78 characters.  # noqa: E501

        :param puuid: The puuid of this SummonerV4SummonerDTO.  # noqa: E501
        :type: str
        """

        self._puuid = puuid

    @property
    def summoner_level(self):
        """Gets the summoner_level of this SummonerV4SummonerDTO.  # noqa: E501

        Summoner level associated with the summoner.  # noqa: E501

        :return: The summoner_level of this SummonerV4SummonerDTO.  # noqa: E501
        :rtype: int
        """
        return self._summoner_level

    @summoner_level.setter
    def summoner_level(self, summoner_level):
        """Sets the summoner_level of this SummonerV4SummonerDTO.

        Summoner level associated with the summoner.  # noqa: E501

        :param summoner_level: The summoner_level of this SummonerV4SummonerDTO.  # noqa: E501
        :type: int
        """

        self._summoner_level = summoner_level

    @property
    def revision_date(self):
        """Gets the revision_date of this SummonerV4SummonerDTO.  # noqa: E501

        Date summoner was last modified specified as epoch milliseconds. The following events will update this timestamp: profile icon change, playing the tutorial or advanced tutorial, finishing a game, summoner name change  # noqa: E501

        :return: The revision_date of this SummonerV4SummonerDTO.  # noqa: E501
        :rtype: int
        """
        return self._revision_date

    @revision_date.setter
    def revision_date(self, revision_date):
        """Sets the revision_date of this SummonerV4SummonerDTO.

        Date summoner was last modified specified as epoch milliseconds. The following events will update this timestamp: profile icon change, playing the tutorial or advanced tutorial, finishing a game, summoner name change  # noqa: E501

        :param revision_date: The revision_date of this SummonerV4SummonerDTO.  # noqa: E501
        :type: int
        """

        self._revision_date = revision_date

    @property
    def id(self):
        """Gets the id of this SummonerV4SummonerDTO.  # noqa: E501

        Encrypted summoner ID. Max length 63 characters.  # noqa: E501

        :return: The id of this SummonerV4SummonerDTO.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SummonerV4SummonerDTO.

        Encrypted summoner ID. Max length 63 characters.  # noqa: E501

        :param id: The id of this SummonerV4SummonerDTO.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def account_id(self):
        """Gets the account_id of this SummonerV4SummonerDTO.  # noqa: E501

        Encrypted account ID. Max length 56 characters.  # noqa: E501

        :return: The account_id of this SummonerV4SummonerDTO.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this SummonerV4SummonerDTO.

        Encrypted account ID. Max length 56 characters.  # noqa: E501

        :param account_id: The account_id of this SummonerV4SummonerDTO.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SummonerV4SummonerDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SummonerV4SummonerDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
