/**
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.RiotApi) {
      root.RiotApi = {};
    }
    root.RiotApi.TournamentV4TournamentCodeUpdateParameters = factory(root.RiotApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The TournamentV4TournamentCodeUpdateParameters model module.
   * @module model/TournamentV4TournamentCodeUpdateParameters
   * @version dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
   */

  /**
   * Constructs a new <code>TournamentV4TournamentCodeUpdateParameters</code>.
   * @alias module:model/TournamentV4TournamentCodeUpdateParameters
   * @class
   * @param spectatorType {module:model/TournamentV4TournamentCodeUpdateParameters.SpectatorTypeEnum} The spectator type              (Legal values:  NONE,  LOBBYONLY,  ALL)
   * @param pickType {module:model/TournamentV4TournamentCodeUpdateParameters.PickTypeEnum} The pick type              (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT)
   * @param mapType {module:model/TournamentV4TournamentCodeUpdateParameters.MapTypeEnum} The map type              (Legal values:  SUMMONERS_RIFT,  TWISTED_TREELINE,  HOWLING_ABYSS)
   */
  var exports = function(spectatorType, pickType, mapType) {
    var _this = this;

    _this['spectatorType'] = spectatorType;
    _this['pickType'] = pickType;

    _this['mapType'] = mapType;
  };

  /**
   * Constructs a <code>TournamentV4TournamentCodeUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TournamentV4TournamentCodeUpdateParameters} obj Optional instance to populate.
   * @return {module:model/TournamentV4TournamentCodeUpdateParameters} The populated <code>TournamentV4TournamentCodeUpdateParameters</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('spectatorType')) {
        obj['spectatorType'] = ApiClient.convertToType(data['spectatorType'], 'String');
      }
      if (data.hasOwnProperty('pickType')) {
        obj['pickType'] = ApiClient.convertToType(data['pickType'], 'String');
      }
      if (data.hasOwnProperty('allowedSummonerIds')) {
        obj['allowedSummonerIds'] = ApiClient.convertToType(data['allowedSummonerIds'], ['String']);
      }
      if (data.hasOwnProperty('mapType')) {
        obj['mapType'] = ApiClient.convertToType(data['mapType'], 'String');
      }
    }
    return obj;
  }

  /**
   * The spectator type              (Legal values:  NONE,  LOBBYONLY,  ALL)
   * @member {module:model/TournamentV4TournamentCodeUpdateParameters.SpectatorTypeEnum} spectatorType
   */
  exports.prototype['spectatorType'] = undefined;
  /**
   * The pick type              (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT)
   * @member {module:model/TournamentV4TournamentCodeUpdateParameters.PickTypeEnum} pickType
   */
  exports.prototype['pickType'] = undefined;
  /**
   * Optional list of encrypted summonerIds in order to validate the players eligible to join the lobby. NOTE: We currently do not enforce participants at the team level, but rather the aggregate of teamOne and teamTwo. We may add the ability to enforce at the team level in the future.
   * @member {Array.<String>} allowedSummonerIds
   */
  exports.prototype['allowedSummonerIds'] = undefined;
  /**
   * The map type              (Legal values:  SUMMONERS_RIFT,  TWISTED_TREELINE,  HOWLING_ABYSS)
   * @member {module:model/TournamentV4TournamentCodeUpdateParameters.MapTypeEnum} mapType
   */
  exports.prototype['mapType'] = undefined;


  /**
   * Allowed values for the <code>spectatorType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SpectatorTypeEnum = {
    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",
    /**
     * value: "LOBBYONLY"
     * @const
     */
    "LOBBYONLY": "LOBBYONLY",
    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL"  };

  /**
   * Allowed values for the <code>pickType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PickTypeEnum = {
    /**
     * value: "BLIND_PICK"
     * @const
     */
    "BLIND_PICK": "BLIND_PICK",
    /**
     * value: "DRAFT_MODE"
     * @const
     */
    "DRAFT_MODE": "DRAFT_MODE",
    /**
     * value: "ALL_RANDOM"
     * @const
     */
    "ALL_RANDOM": "ALL_RANDOM",
    /**
     * value: "TOURNAMENT_DRAFT"
     * @const
     */
    "TOURNAMENT_DRAFT": "TOURNAMENT_DRAFT"  };

  /**
   * Allowed values for the <code>mapType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MapTypeEnum = {
    /**
     * value: "SUMMONERS_RIFT"
     * @const
     */
    "SUMMONERS_RIFT": "SUMMONERS_RIFT",
    /**
     * value: "TWISTED_TREELINE"
     * @const
     */
    "TWISTED_TREELINE": "TWISTED_TREELINE",
    /**
     * value: "HOWLING_ABYSS"
     * @const
     */
    "HOWLING_ABYSS": "HOWLING_ABYSS"  };


  return exports;
}));


