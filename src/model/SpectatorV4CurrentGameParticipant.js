/**
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SpectatorV4GameCustomizationObject', 'model/SpectatorV4Perks'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SpectatorV4GameCustomizationObject'), require('./SpectatorV4Perks'));
  } else {
    // Browser globals (root is window)
    if (!root.RiotApi) {
      root.RiotApi = {};
    }
    root.RiotApi.SpectatorV4CurrentGameParticipant = factory(root.RiotApi.ApiClient, root.RiotApi.SpectatorV4GameCustomizationObject, root.RiotApi.SpectatorV4Perks);
  }
}(this, function(ApiClient, SpectatorV4GameCustomizationObject, SpectatorV4Perks) {
  'use strict';




  /**
   * The SpectatorV4CurrentGameParticipant model module.
   * @module model/SpectatorV4CurrentGameParticipant
   * @version dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
   */

  /**
   * Constructs a new <code>SpectatorV4CurrentGameParticipant</code>.
   * @alias module:model/SpectatorV4CurrentGameParticipant
   * @class
   */
  var exports = function() {
    var _this = this;











  };

  /**
   * Constructs a <code>SpectatorV4CurrentGameParticipant</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SpectatorV4CurrentGameParticipant} obj Optional instance to populate.
   * @return {module:model/SpectatorV4CurrentGameParticipant} The populated <code>SpectatorV4CurrentGameParticipant</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('profileIconId')) {
        obj['profileIconId'] = ApiClient.convertToType(data['profileIconId'], 'Number');
      }
      if (data.hasOwnProperty('championId')) {
        obj['championId'] = ApiClient.convertToType(data['championId'], 'Number');
      }
      if (data.hasOwnProperty('summonerName')) {
        obj['summonerName'] = ApiClient.convertToType(data['summonerName'], 'String');
      }
      if (data.hasOwnProperty('gameCustomizationObjects')) {
        obj['gameCustomizationObjects'] = ApiClient.convertToType(data['gameCustomizationObjects'], [SpectatorV4GameCustomizationObject]);
      }
      if (data.hasOwnProperty('bot')) {
        obj['bot'] = ApiClient.convertToType(data['bot'], 'Boolean');
      }
      if (data.hasOwnProperty('perks')) {
        obj['perks'] = SpectatorV4Perks.constructFromObject(data['perks']);
      }
      if (data.hasOwnProperty('spell2Id')) {
        obj['spell2Id'] = ApiClient.convertToType(data['spell2Id'], 'Number');
      }
      if (data.hasOwnProperty('teamId')) {
        obj['teamId'] = ApiClient.convertToType(data['teamId'], 'Number');
      }
      if (data.hasOwnProperty('spell1Id')) {
        obj['spell1Id'] = ApiClient.convertToType(data['spell1Id'], 'Number');
      }
      if (data.hasOwnProperty('summonerId')) {
        obj['summonerId'] = ApiClient.convertToType(data['summonerId'], 'String');
      }
    }
    return obj;
  }

  /**
   * The ID of the profile icon used by this participant
   * @member {Number} profileIconId
   */
  exports.prototype['profileIconId'] = undefined;
  /**
   * The ID of the champion played by this participant
   * @member {Number} championId
   */
  exports.prototype['championId'] = undefined;
  /**
   * The summoner name of this participant
   * @member {String} summonerName
   */
  exports.prototype['summonerName'] = undefined;
  /**
   * List of Game Customizations
   * @member {Array.<module:model/SpectatorV4GameCustomizationObject>} gameCustomizationObjects
   */
  exports.prototype['gameCustomizationObjects'] = undefined;
  /**
   * Flag indicating whether or not this participant is a bot
   * @member {Boolean} bot
   */
  exports.prototype['bot'] = undefined;
  /**
   * Perks/Runes Reforged Information
   * @member {module:model/SpectatorV4Perks} perks
   */
  exports.prototype['perks'] = undefined;
  /**
   * The ID of the second summoner spell used by this participant
   * @member {Number} spell2Id
   */
  exports.prototype['spell2Id'] = undefined;
  /**
   * The team ID of this participant, indicating the participant's team
   * @member {Number} teamId
   */
  exports.prototype['teamId'] = undefined;
  /**
   * The ID of the first summoner spell used by this participant
   * @member {Number} spell1Id
   */
  exports.prototype['spell1Id'] = undefined;
  /**
   * The encrypted summoner ID of this participant
   * @member {String} summonerId
   */
  exports.prototype['summonerId'] = undefined;



  return exports;
}));


