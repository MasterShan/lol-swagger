/**
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ChampionMasteryV4ChampionMasteryDTO'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ChampionMasteryV4ChampionMasteryDTO'));
  } else {
    // Browser globals (root is window)
    if (!root.RiotApi) {
      root.RiotApi = {};
    }
    root.RiotApi.ChampionMasteryV4Api = factory(root.RiotApi.ApiClient, root.RiotApi.ChampionMasteryV4ChampionMasteryDTO);
  }
}(this, function(ApiClient, ChampionMasteryV4ChampionMasteryDTO) {
  'use strict';

  /**
   * ChampionMasteryV4 service.
   * @module api/ChampionMasteryV4Api
   * @version dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
   */

  /**
   * Constructs a new ChampionMasteryV4Api. 
   * @alias module:api/ChampionMasteryV4Api
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the championMasteryV4GetAllChampionMasteries operation.
     * @callback module:api/ChampionMasteryV4Api~championMasteryV4GetAllChampionMasteriesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ChampionMasteryV4ChampionMasteryDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all champion mastery entries sorted by number of champion points descending,
     * Get all champion mastery entries sorted by number of champion points descending,
     * @param {String} encryptedSummonerId Summoner ID associated with the player
     * @param {module:api/ChampionMasteryV4Api~championMasteryV4GetAllChampionMasteriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ChampionMasteryV4ChampionMasteryDTO>}
     */
    this.championMasteryV4GetAllChampionMasteries = function(encryptedSummonerId, callback) {
      var postBody = null;

      // verify the required parameter 'encryptedSummonerId' is set
      if (encryptedSummonerId === undefined || encryptedSummonerId === null) {
        throw new Error("Missing the required parameter 'encryptedSummonerId' when calling championMasteryV4GetAllChampionMasteries");
      }


      var pathParams = {
        'encryptedSummonerId': encryptedSummonerId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Riot-Token', 'api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [ChampionMasteryV4ChampionMasteryDTO];

      return this.apiClient.callApi(
        '/lol/champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the championMasteryV4GetChampionMastery operation.
     * @callback module:api/ChampionMasteryV4Api~championMasteryV4GetChampionMasteryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChampionMasteryV4ChampionMasteryDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a champion mastery by player ID and champion ID.
     * Get a champion mastery by player ID and champion ID.
     * @param {Number} championId Champion ID to retrieve Champion Mastery for
     * @param {String} encryptedSummonerId Summoner ID associated with the player
     * @param {module:api/ChampionMasteryV4Api~championMasteryV4GetChampionMasteryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChampionMasteryV4ChampionMasteryDTO}
     */
    this.championMasteryV4GetChampionMastery = function(championId, encryptedSummonerId, callback) {
      var postBody = null;

      // verify the required parameter 'championId' is set
      if (championId === undefined || championId === null) {
        throw new Error("Missing the required parameter 'championId' when calling championMasteryV4GetChampionMastery");
      }

      // verify the required parameter 'encryptedSummonerId' is set
      if (encryptedSummonerId === undefined || encryptedSummonerId === null) {
        throw new Error("Missing the required parameter 'encryptedSummonerId' when calling championMasteryV4GetChampionMastery");
      }


      var pathParams = {
        'championId': championId,
        'encryptedSummonerId': encryptedSummonerId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Riot-Token', 'api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ChampionMasteryV4ChampionMasteryDTO;

      return this.apiClient.callApi(
        '/lol/champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the championMasteryV4GetChampionMasteryScore operation.
     * @callback module:api/ChampionMasteryV4Api~championMasteryV4GetChampionMasteryScoreCallback
     * @param {String} error Error message, if any.
     * @param {'Number'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a player&#39;s total champion mastery score, which is the sum of individual champion mastery levels.
     * Get a player&#39;s total champion mastery score, which is the sum of individual champion mastery levels.
     * @param {String} encryptedSummonerId Summoner ID associated with the player
     * @param {module:api/ChampionMasteryV4Api~championMasteryV4GetChampionMasteryScoreCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'Number'}
     */
    this.championMasteryV4GetChampionMasteryScore = function(encryptedSummonerId, callback) {
      var postBody = null;

      // verify the required parameter 'encryptedSummonerId' is set
      if (encryptedSummonerId === undefined || encryptedSummonerId === null) {
        throw new Error("Missing the required parameter 'encryptedSummonerId' when calling championMasteryV4GetChampionMasteryScore");
      }


      var pathParams = {
        'encryptedSummonerId': encryptedSummonerId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Riot-Token', 'api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = 'Number';

      return this.apiClient.callApi(
        '/lol/champion-mastery/v4/scores/by-summoner/{encryptedSummonerId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
