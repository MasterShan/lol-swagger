/**
* Riot API
*  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
*
* OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models


import com.squareup.moshi.Json
/**
 * 
 * @param lane Participant's calculated lane. MID and BOT are legacy values.              (Legal values:  MID,  MIDDLE,  TOP,  JUNGLE,  BOT,  BOTTOM)
 * @param participantId 
 * @param csDiffPerMinDeltas Creep score difference versus the calculated lane opponent(s) for a specified period.
 * @param goldPerMinDeltas Gold for a specified period.
 * @param xpDiffPerMinDeltas Experience difference versus the calculated lane opponent(s) for a specified period.
 * @param creepsPerMinDeltas Creeps for a specified period.
 * @param xpPerMinDeltas Experience change for a specified period.
 * @param role Participant's calculated role.              (Legal values:  DUO,  NONE,  SOLO,  DUO_CARRY,  DUO_SUPPORT)
 * @param damageTakenDiffPerMinDeltas Damage taken difference versus the calculated lane opponent(s) for a specified period.
 * @param damageTakenPerMinDeltas Damage taken for a specified period.
 */
data class MatchMinusv4ParticipantTimelineDto (
    /* Participant's calculated lane. MID and BOT are legacy values.              (Legal values:  MID,  MIDDLE,  TOP,  JUNGLE,  BOT,  BOTTOM) */
    val lane: MatchMinusv4ParticipantTimelineDto.Lane? = null,
    val participantId: kotlin.Int? = null,
    /* Creep score difference versus the calculated lane opponent(s) for a specified period. */
    val csDiffPerMinDeltas: kotlin.collections.Map<kotlin.String, kotlin.Double>? = null,
    /* Gold for a specified period. */
    val goldPerMinDeltas: kotlin.collections.Map<kotlin.String, kotlin.Double>? = null,
    /* Experience difference versus the calculated lane opponent(s) for a specified period. */
    val xpDiffPerMinDeltas: kotlin.collections.Map<kotlin.String, kotlin.Double>? = null,
    /* Creeps for a specified period. */
    val creepsPerMinDeltas: kotlin.collections.Map<kotlin.String, kotlin.Double>? = null,
    /* Experience change for a specified period. */
    val xpPerMinDeltas: kotlin.collections.Map<kotlin.String, kotlin.Double>? = null,
    /* Participant's calculated role.              (Legal values:  DUO,  NONE,  SOLO,  DUO_CARRY,  DUO_SUPPORT) */
    val role: MatchMinusv4ParticipantTimelineDto.Role? = null,
    /* Damage taken difference versus the calculated lane opponent(s) for a specified period. */
    val damageTakenDiffPerMinDeltas: kotlin.collections.Map<kotlin.String, kotlin.Double>? = null,
    /* Damage taken for a specified period. */
    val damageTakenPerMinDeltas: kotlin.collections.Map<kotlin.String, kotlin.Double>? = null
) {

    /**
    * Participant's calculated lane. MID and BOT are legacy values.              (Legal values:  MID,  MIDDLE,  TOP,  JUNGLE,  BOT,  BOTTOM)
    * Values: mID,mIDDLE,tOP,jUNGLE,bOT,bOTTOM
    */
    enum class Lane(val value: kotlin.String){
    
        @Json(name = "MID") mID("MID"),
    
        @Json(name = "MIDDLE") mIDDLE("MIDDLE"),
    
        @Json(name = "TOP") tOP("TOP"),
    
        @Json(name = "JUNGLE") jUNGLE("JUNGLE"),
    
        @Json(name = "BOT") bOT("BOT"),
    
        @Json(name = "BOTTOM") bOTTOM("BOTTOM");
    
    }

    /**
    * Participant's calculated role.              (Legal values:  DUO,  NONE,  SOLO,  DUO_CARRY,  DUO_SUPPORT)
    * Values: dUO,nONE,sOLO,dUOCARRY,dUOSUPPORT
    */
    enum class Role(val value: kotlin.String){
    
        @Json(name = "DUO") dUO("DUO"),
    
        @Json(name = "NONE") nONE("NONE"),
    
        @Json(name = "SOLO") sOLO("SOLO"),
    
        @Json(name = "DUO_CARRY") dUOCARRY("DUO_CARRY"),
    
        @Json(name = "DUO_SUPPORT") dUOSUPPORT("DUO_SUPPORT");
    
    }

}

