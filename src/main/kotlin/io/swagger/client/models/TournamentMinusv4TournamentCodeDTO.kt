/**
* Riot API
*  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
*
* OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models


import com.squareup.moshi.Json
/**
 * 
 * @param map The game map for the tournament code game
 * @param code The tournament code.
 * @param spectators The spectator mode for the tournament code game.
 * @param region The tournament code's region.              (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR)
 * @param providerId The provider's ID.
 * @param teamSize The team size for the tournament code game.
 * @param participants The summonerIds of the participants (Encrypted)
 * @param pickType The pick mode for tournament code game.
 * @param tournamentId The tournament's ID.
 * @param lobbyName The lobby name for the tournament code game.
 * @param password The password for the tournament code game.
 * @param id The tournament code's ID.
 * @param metaData The metadata for tournament code.
 */
data class TournamentMinusv4TournamentCodeDTO (
    /* The game map for the tournament code game */
    val map: kotlin.String? = null,
    /* The tournament code. */
    val code: kotlin.String? = null,
    /* The spectator mode for the tournament code game. */
    val spectators: kotlin.String? = null,
    /* The tournament code's region.              (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR) */
    val region: TournamentMinusv4TournamentCodeDTO.Region? = null,
    /* The provider's ID. */
    val providerId: kotlin.Int? = null,
    /* The team size for the tournament code game. */
    val teamSize: kotlin.Int? = null,
    /* The summonerIds of the participants (Encrypted) */
    val participants: kotlin.Array<kotlin.String>? = null,
    /* The pick mode for tournament code game. */
    val pickType: kotlin.String? = null,
    /* The tournament's ID. */
    val tournamentId: kotlin.Int? = null,
    /* The lobby name for the tournament code game. */
    val lobbyName: kotlin.String? = null,
    /* The password for the tournament code game. */
    val password: kotlin.String? = null,
    /* The tournament code's ID. */
    val id: kotlin.Int? = null,
    /* The metadata for tournament code. */
    val metaData: kotlin.String? = null
) {

    /**
    * The tournament code's region.              (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR)
    * Values: bR,eUNE,eUW,jP,lAN,lAS,nA,oCE,pBE,rU,tR
    */
    enum class Region(val value: kotlin.String){
    
        @Json(name = "BR") bR("BR"),
    
        @Json(name = "EUNE") eUNE("EUNE"),
    
        @Json(name = "EUW") eUW("EUW"),
    
        @Json(name = "JP") jP("JP"),
    
        @Json(name = "LAN") lAN("LAN"),
    
        @Json(name = "LAS") lAS("LAS"),
    
        @Json(name = "NA") nA("NA"),
    
        @Json(name = "OCE") oCE("OCE"),
    
        @Json(name = "PBE") pBE("PBE"),
    
        @Json(name = "RU") rU("RU"),
    
        @Json(name = "TR") tR("TR");
    
    }

}

