/**
* Riot API
*  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
*
* OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import io.swagger.client.models.MatchMinusv4TeamBansDto

import com.squareup.moshi.Json
/**
 * 
 * @param firstDragon Flag indicating whether or not the team scored the first Dragon kill.
 * @param firstInhibitor Flag indicating whether or not the team destroyed the first inhibitor.
 * @param bans If match queueId has a draft, contains banned champion data, otherwise empty.
 * @param baronKills Number of times the team killed Baron.
 * @param firstRiftHerald Flag indicating whether or not the team scored the first Rift Herald kill.
 * @param firstBaron Flag indicating whether or not the team scored the first Baron kill.
 * @param riftHeraldKills Number of times the team killed Rift Herald.
 * @param firstBlood Flag indicating whether or not the team scored the first blood.
 * @param teamId 100 for blue side. 200 for red side.
 * @param firstTower Flag indicating whether or not the team destroyed the first tower.
 * @param vilemawKills Number of times the team killed Vilemaw.
 * @param inhibitorKills Number of inhibitors the team destroyed.
 * @param towerKills Number of towers the team destroyed.
 * @param dominionVictoryScore For Dominion matches, specifies the points the team had at game end.
 * @param win String indicating whether or not the team won. There are only two values visibile in public match history.              (Legal values:  Fail,  Win)
 * @param dragonKills Number of times the team killed Dragon.
 */
data class MatchMinusv4TeamStatsDto (
    /* Flag indicating whether or not the team scored the first Dragon kill. */
    val firstDragon: kotlin.Boolean? = null,
    /* Flag indicating whether or not the team destroyed the first inhibitor. */
    val firstInhibitor: kotlin.Boolean? = null,
    /* If match queueId has a draft, contains banned champion data, otherwise empty. */
    val bans: kotlin.Array<MatchMinusv4TeamBansDto>? = null,
    /* Number of times the team killed Baron. */
    val baronKills: kotlin.Int? = null,
    /* Flag indicating whether or not the team scored the first Rift Herald kill. */
    val firstRiftHerald: kotlin.Boolean? = null,
    /* Flag indicating whether or not the team scored the first Baron kill. */
    val firstBaron: kotlin.Boolean? = null,
    /* Number of times the team killed Rift Herald. */
    val riftHeraldKills: kotlin.Int? = null,
    /* Flag indicating whether or not the team scored the first blood. */
    val firstBlood: kotlin.Boolean? = null,
    /* 100 for blue side. 200 for red side. */
    val teamId: kotlin.Int? = null,
    /* Flag indicating whether or not the team destroyed the first tower. */
    val firstTower: kotlin.Boolean? = null,
    /* Number of times the team killed Vilemaw. */
    val vilemawKills: kotlin.Int? = null,
    /* Number of inhibitors the team destroyed. */
    val inhibitorKills: kotlin.Int? = null,
    /* Number of towers the team destroyed. */
    val towerKills: kotlin.Int? = null,
    /* For Dominion matches, specifies the points the team had at game end. */
    val dominionVictoryScore: kotlin.Int? = null,
    /* String indicating whether or not the team won. There are only two values visibile in public match history.              (Legal values:  Fail,  Win) */
    val win: MatchMinusv4TeamStatsDto.Win? = null,
    /* Number of times the team killed Dragon. */
    val dragonKills: kotlin.Int? = null
) {

    /**
    * String indicating whether or not the team won. There are only two values visibile in public match history.              (Legal values:  Fail,  Win)
    * Values: fail,win
    */
    enum class Win(val value: kotlin.String){
    
        @Json(name = "Fail") fail("Fail"),
    
        @Json(name = "Win") win("Win");
    
    }

}

