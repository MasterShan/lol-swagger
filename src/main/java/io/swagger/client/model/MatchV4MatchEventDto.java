/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MatchV4MatchPositionDto;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MatchV4MatchEventDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T15:57:39.031+02:00")
public class MatchV4MatchEventDto {
  @SerializedName("eventType")
  private String eventType = null;

  @SerializedName("towerType")
  private String towerType = null;

  @SerializedName("teamId")
  private Integer teamId = null;

  @SerializedName("ascendedType")
  private String ascendedType = null;

  @SerializedName("killerId")
  private Integer killerId = null;

  @SerializedName("levelUpType")
  private String levelUpType = null;

  @SerializedName("pointCaptured")
  private String pointCaptured = null;

  @SerializedName("assistingParticipantIds")
  private List<Integer> assistingParticipantIds = null;

  @SerializedName("wardType")
  private String wardType = null;

  @SerializedName("monsterType")
  private String monsterType = null;

  /**
   * (Legal values:  CHAMPION_KILL,  WARD_PLACED,  WARD_KILL,  BUILDING_KILL,  ELITE_MONSTER_KILL,  ITEM_PURCHASED,  ITEM_SOLD,  ITEM_DESTROYED,  ITEM_UNDO,  SKILL_LEVEL_UP,  ASCENDED_EVENT,  CAPTURE_POINT,  PORO_KING_SUMMON)
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CHAMPION_KILL("CHAMPION_KILL"),
    
    WARD_PLACED("WARD_PLACED"),
    
    WARD_KILL("WARD_KILL"),
    
    BUILDING_KILL("BUILDING_KILL"),
    
    ELITE_MONSTER_KILL("ELITE_MONSTER_KILL"),
    
    ITEM_PURCHASED("ITEM_PURCHASED"),
    
    ITEM_SOLD("ITEM_SOLD"),
    
    ITEM_DESTROYED("ITEM_DESTROYED"),
    
    ITEM_UNDO("ITEM_UNDO"),
    
    SKILL_LEVEL_UP("SKILL_LEVEL_UP"),
    
    ASCENDED_EVENT("ASCENDED_EVENT"),
    
    CAPTURE_POINT("CAPTURE_POINT"),
    
    PORO_KING_SUMMON("PORO_KING_SUMMON");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("skillSlot")
  private Integer skillSlot = null;

  @SerializedName("victimId")
  private Integer victimId = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("afterId")
  private Integer afterId = null;

  @SerializedName("monsterSubType")
  private String monsterSubType = null;

  @SerializedName("laneType")
  private String laneType = null;

  @SerializedName("itemId")
  private Integer itemId = null;

  @SerializedName("participantId")
  private Integer participantId = null;

  @SerializedName("buildingType")
  private String buildingType = null;

  @SerializedName("creatorId")
  private Integer creatorId = null;

  @SerializedName("position")
  private MatchV4MatchPositionDto position = null;

  @SerializedName("beforeId")
  private Integer beforeId = null;

  public MatchV4MatchEventDto eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @ApiModelProperty(value = "")
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  public MatchV4MatchEventDto towerType(String towerType) {
    this.towerType = towerType;
    return this;
  }

   /**
   * Get towerType
   * @return towerType
  **/
  @ApiModelProperty(value = "")
  public String getTowerType() {
    return towerType;
  }

  public void setTowerType(String towerType) {
    this.towerType = towerType;
  }

  public MatchV4MatchEventDto teamId(Integer teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @ApiModelProperty(value = "")
  public Integer getTeamId() {
    return teamId;
  }

  public void setTeamId(Integer teamId) {
    this.teamId = teamId;
  }

  public MatchV4MatchEventDto ascendedType(String ascendedType) {
    this.ascendedType = ascendedType;
    return this;
  }

   /**
   * Get ascendedType
   * @return ascendedType
  **/
  @ApiModelProperty(value = "")
  public String getAscendedType() {
    return ascendedType;
  }

  public void setAscendedType(String ascendedType) {
    this.ascendedType = ascendedType;
  }

  public MatchV4MatchEventDto killerId(Integer killerId) {
    this.killerId = killerId;
    return this;
  }

   /**
   * Get killerId
   * @return killerId
  **/
  @ApiModelProperty(value = "")
  public Integer getKillerId() {
    return killerId;
  }

  public void setKillerId(Integer killerId) {
    this.killerId = killerId;
  }

  public MatchV4MatchEventDto levelUpType(String levelUpType) {
    this.levelUpType = levelUpType;
    return this;
  }

   /**
   * Get levelUpType
   * @return levelUpType
  **/
  @ApiModelProperty(value = "")
  public String getLevelUpType() {
    return levelUpType;
  }

  public void setLevelUpType(String levelUpType) {
    this.levelUpType = levelUpType;
  }

  public MatchV4MatchEventDto pointCaptured(String pointCaptured) {
    this.pointCaptured = pointCaptured;
    return this;
  }

   /**
   * Get pointCaptured
   * @return pointCaptured
  **/
  @ApiModelProperty(value = "")
  public String getPointCaptured() {
    return pointCaptured;
  }

  public void setPointCaptured(String pointCaptured) {
    this.pointCaptured = pointCaptured;
  }

  public MatchV4MatchEventDto assistingParticipantIds(List<Integer> assistingParticipantIds) {
    this.assistingParticipantIds = assistingParticipantIds;
    return this;
  }

  public MatchV4MatchEventDto addAssistingParticipantIdsItem(Integer assistingParticipantIdsItem) {
    if (this.assistingParticipantIds == null) {
      this.assistingParticipantIds = new ArrayList<Integer>();
    }
    this.assistingParticipantIds.add(assistingParticipantIdsItem);
    return this;
  }

   /**
   * Get assistingParticipantIds
   * @return assistingParticipantIds
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getAssistingParticipantIds() {
    return assistingParticipantIds;
  }

  public void setAssistingParticipantIds(List<Integer> assistingParticipantIds) {
    this.assistingParticipantIds = assistingParticipantIds;
  }

  public MatchV4MatchEventDto wardType(String wardType) {
    this.wardType = wardType;
    return this;
  }

   /**
   * Get wardType
   * @return wardType
  **/
  @ApiModelProperty(value = "")
  public String getWardType() {
    return wardType;
  }

  public void setWardType(String wardType) {
    this.wardType = wardType;
  }

  public MatchV4MatchEventDto monsterType(String monsterType) {
    this.monsterType = monsterType;
    return this;
  }

   /**
   * Get monsterType
   * @return monsterType
  **/
  @ApiModelProperty(value = "")
  public String getMonsterType() {
    return monsterType;
  }

  public void setMonsterType(String monsterType) {
    this.monsterType = monsterType;
  }

  public MatchV4MatchEventDto type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * (Legal values:  CHAMPION_KILL,  WARD_PLACED,  WARD_KILL,  BUILDING_KILL,  ELITE_MONSTER_KILL,  ITEM_PURCHASED,  ITEM_SOLD,  ITEM_DESTROYED,  ITEM_UNDO,  SKILL_LEVEL_UP,  ASCENDED_EVENT,  CAPTURE_POINT,  PORO_KING_SUMMON)
   * @return type
  **/
  @ApiModelProperty(value = "(Legal values:  CHAMPION_KILL,  WARD_PLACED,  WARD_KILL,  BUILDING_KILL,  ELITE_MONSTER_KILL,  ITEM_PURCHASED,  ITEM_SOLD,  ITEM_DESTROYED,  ITEM_UNDO,  SKILL_LEVEL_UP,  ASCENDED_EVENT,  CAPTURE_POINT,  PORO_KING_SUMMON)")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public MatchV4MatchEventDto skillSlot(Integer skillSlot) {
    this.skillSlot = skillSlot;
    return this;
  }

   /**
   * Get skillSlot
   * @return skillSlot
  **/
  @ApiModelProperty(value = "")
  public Integer getSkillSlot() {
    return skillSlot;
  }

  public void setSkillSlot(Integer skillSlot) {
    this.skillSlot = skillSlot;
  }

  public MatchV4MatchEventDto victimId(Integer victimId) {
    this.victimId = victimId;
    return this;
  }

   /**
   * Get victimId
   * @return victimId
  **/
  @ApiModelProperty(value = "")
  public Integer getVictimId() {
    return victimId;
  }

  public void setVictimId(Integer victimId) {
    this.victimId = victimId;
  }

  public MatchV4MatchEventDto timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public MatchV4MatchEventDto afterId(Integer afterId) {
    this.afterId = afterId;
    return this;
  }

   /**
   * Get afterId
   * @return afterId
  **/
  @ApiModelProperty(value = "")
  public Integer getAfterId() {
    return afterId;
  }

  public void setAfterId(Integer afterId) {
    this.afterId = afterId;
  }

  public MatchV4MatchEventDto monsterSubType(String monsterSubType) {
    this.monsterSubType = monsterSubType;
    return this;
  }

   /**
   * Get monsterSubType
   * @return monsterSubType
  **/
  @ApiModelProperty(value = "")
  public String getMonsterSubType() {
    return monsterSubType;
  }

  public void setMonsterSubType(String monsterSubType) {
    this.monsterSubType = monsterSubType;
  }

  public MatchV4MatchEventDto laneType(String laneType) {
    this.laneType = laneType;
    return this;
  }

   /**
   * Get laneType
   * @return laneType
  **/
  @ApiModelProperty(value = "")
  public String getLaneType() {
    return laneType;
  }

  public void setLaneType(String laneType) {
    this.laneType = laneType;
  }

  public MatchV4MatchEventDto itemId(Integer itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * Get itemId
   * @return itemId
  **/
  @ApiModelProperty(value = "")
  public Integer getItemId() {
    return itemId;
  }

  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }

  public MatchV4MatchEventDto participantId(Integer participantId) {
    this.participantId = participantId;
    return this;
  }

   /**
   * Get participantId
   * @return participantId
  **/
  @ApiModelProperty(value = "")
  public Integer getParticipantId() {
    return participantId;
  }

  public void setParticipantId(Integer participantId) {
    this.participantId = participantId;
  }

  public MatchV4MatchEventDto buildingType(String buildingType) {
    this.buildingType = buildingType;
    return this;
  }

   /**
   * Get buildingType
   * @return buildingType
  **/
  @ApiModelProperty(value = "")
  public String getBuildingType() {
    return buildingType;
  }

  public void setBuildingType(String buildingType) {
    this.buildingType = buildingType;
  }

  public MatchV4MatchEventDto creatorId(Integer creatorId) {
    this.creatorId = creatorId;
    return this;
  }

   /**
   * Get creatorId
   * @return creatorId
  **/
  @ApiModelProperty(value = "")
  public Integer getCreatorId() {
    return creatorId;
  }

  public void setCreatorId(Integer creatorId) {
    this.creatorId = creatorId;
  }

  public MatchV4MatchEventDto position(MatchV4MatchPositionDto position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @ApiModelProperty(value = "")
  public MatchV4MatchPositionDto getPosition() {
    return position;
  }

  public void setPosition(MatchV4MatchPositionDto position) {
    this.position = position;
  }

  public MatchV4MatchEventDto beforeId(Integer beforeId) {
    this.beforeId = beforeId;
    return this;
  }

   /**
   * Get beforeId
   * @return beforeId
  **/
  @ApiModelProperty(value = "")
  public Integer getBeforeId() {
    return beforeId;
  }

  public void setBeforeId(Integer beforeId) {
    this.beforeId = beforeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchV4MatchEventDto matchV4MatchEventDto = (MatchV4MatchEventDto) o;
    return Objects.equals(this.eventType, matchV4MatchEventDto.eventType) &&
        Objects.equals(this.towerType, matchV4MatchEventDto.towerType) &&
        Objects.equals(this.teamId, matchV4MatchEventDto.teamId) &&
        Objects.equals(this.ascendedType, matchV4MatchEventDto.ascendedType) &&
        Objects.equals(this.killerId, matchV4MatchEventDto.killerId) &&
        Objects.equals(this.levelUpType, matchV4MatchEventDto.levelUpType) &&
        Objects.equals(this.pointCaptured, matchV4MatchEventDto.pointCaptured) &&
        Objects.equals(this.assistingParticipantIds, matchV4MatchEventDto.assistingParticipantIds) &&
        Objects.equals(this.wardType, matchV4MatchEventDto.wardType) &&
        Objects.equals(this.monsterType, matchV4MatchEventDto.monsterType) &&
        Objects.equals(this.type, matchV4MatchEventDto.type) &&
        Objects.equals(this.skillSlot, matchV4MatchEventDto.skillSlot) &&
        Objects.equals(this.victimId, matchV4MatchEventDto.victimId) &&
        Objects.equals(this.timestamp, matchV4MatchEventDto.timestamp) &&
        Objects.equals(this.afterId, matchV4MatchEventDto.afterId) &&
        Objects.equals(this.monsterSubType, matchV4MatchEventDto.monsterSubType) &&
        Objects.equals(this.laneType, matchV4MatchEventDto.laneType) &&
        Objects.equals(this.itemId, matchV4MatchEventDto.itemId) &&
        Objects.equals(this.participantId, matchV4MatchEventDto.participantId) &&
        Objects.equals(this.buildingType, matchV4MatchEventDto.buildingType) &&
        Objects.equals(this.creatorId, matchV4MatchEventDto.creatorId) &&
        Objects.equals(this.position, matchV4MatchEventDto.position) &&
        Objects.equals(this.beforeId, matchV4MatchEventDto.beforeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventType, towerType, teamId, ascendedType, killerId, levelUpType, pointCaptured, assistingParticipantIds, wardType, monsterType, type, skillSlot, victimId, timestamp, afterId, monsterSubType, laneType, itemId, participantId, buildingType, creatorId, position, beforeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchV4MatchEventDto {\n");
    
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    towerType: ").append(toIndentedString(towerType)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    ascendedType: ").append(toIndentedString(ascendedType)).append("\n");
    sb.append("    killerId: ").append(toIndentedString(killerId)).append("\n");
    sb.append("    levelUpType: ").append(toIndentedString(levelUpType)).append("\n");
    sb.append("    pointCaptured: ").append(toIndentedString(pointCaptured)).append("\n");
    sb.append("    assistingParticipantIds: ").append(toIndentedString(assistingParticipantIds)).append("\n");
    sb.append("    wardType: ").append(toIndentedString(wardType)).append("\n");
    sb.append("    monsterType: ").append(toIndentedString(monsterType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    skillSlot: ").append(toIndentedString(skillSlot)).append("\n");
    sb.append("    victimId: ").append(toIndentedString(victimId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    afterId: ").append(toIndentedString(afterId)).append("\n");
    sb.append("    monsterSubType: ").append(toIndentedString(monsterSubType)).append("\n");
    sb.append("    laneType: ").append(toIndentedString(laneType)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    participantId: ").append(toIndentedString(participantId)).append("\n");
    sb.append("    buildingType: ").append(toIndentedString(buildingType)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    beforeId: ").append(toIndentedString(beforeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

