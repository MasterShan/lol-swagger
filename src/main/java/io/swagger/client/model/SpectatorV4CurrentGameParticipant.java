/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SpectatorV4GameCustomizationObject;
import io.swagger.client.model.SpectatorV4Perks;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SpectatorV4CurrentGameParticipant
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T15:57:39.031+02:00")
public class SpectatorV4CurrentGameParticipant {
  @SerializedName("profileIconId")
  private Long profileIconId = null;

  @SerializedName("championId")
  private Long championId = null;

  @SerializedName("summonerName")
  private String summonerName = null;

  @SerializedName("gameCustomizationObjects")
  private List<SpectatorV4GameCustomizationObject> gameCustomizationObjects = null;

  @SerializedName("bot")
  private Boolean bot = null;

  @SerializedName("perks")
  private SpectatorV4Perks perks = null;

  @SerializedName("spell2Id")
  private Long spell2Id = null;

  @SerializedName("teamId")
  private Long teamId = null;

  @SerializedName("spell1Id")
  private Long spell1Id = null;

  @SerializedName("summonerId")
  private String summonerId = null;

  public SpectatorV4CurrentGameParticipant profileIconId(Long profileIconId) {
    this.profileIconId = profileIconId;
    return this;
  }

   /**
   * The ID of the profile icon used by this participant
   * @return profileIconId
  **/
  @ApiModelProperty(value = "The ID of the profile icon used by this participant")
  public Long getProfileIconId() {
    return profileIconId;
  }

  public void setProfileIconId(Long profileIconId) {
    this.profileIconId = profileIconId;
  }

  public SpectatorV4CurrentGameParticipant championId(Long championId) {
    this.championId = championId;
    return this;
  }

   /**
   * The ID of the champion played by this participant
   * @return championId
  **/
  @ApiModelProperty(value = "The ID of the champion played by this participant")
  public Long getChampionId() {
    return championId;
  }

  public void setChampionId(Long championId) {
    this.championId = championId;
  }

  public SpectatorV4CurrentGameParticipant summonerName(String summonerName) {
    this.summonerName = summonerName;
    return this;
  }

   /**
   * The summoner name of this participant
   * @return summonerName
  **/
  @ApiModelProperty(value = "The summoner name of this participant")
  public String getSummonerName() {
    return summonerName;
  }

  public void setSummonerName(String summonerName) {
    this.summonerName = summonerName;
  }

  public SpectatorV4CurrentGameParticipant gameCustomizationObjects(List<SpectatorV4GameCustomizationObject> gameCustomizationObjects) {
    this.gameCustomizationObjects = gameCustomizationObjects;
    return this;
  }

  public SpectatorV4CurrentGameParticipant addGameCustomizationObjectsItem(SpectatorV4GameCustomizationObject gameCustomizationObjectsItem) {
    if (this.gameCustomizationObjects == null) {
      this.gameCustomizationObjects = new ArrayList<SpectatorV4GameCustomizationObject>();
    }
    this.gameCustomizationObjects.add(gameCustomizationObjectsItem);
    return this;
  }

   /**
   * List of Game Customizations
   * @return gameCustomizationObjects
  **/
  @ApiModelProperty(value = "List of Game Customizations")
  public List<SpectatorV4GameCustomizationObject> getGameCustomizationObjects() {
    return gameCustomizationObjects;
  }

  public void setGameCustomizationObjects(List<SpectatorV4GameCustomizationObject> gameCustomizationObjects) {
    this.gameCustomizationObjects = gameCustomizationObjects;
  }

  public SpectatorV4CurrentGameParticipant bot(Boolean bot) {
    this.bot = bot;
    return this;
  }

   /**
   * Flag indicating whether or not this participant is a bot
   * @return bot
  **/
  @ApiModelProperty(value = "Flag indicating whether or not this participant is a bot")
  public Boolean isBot() {
    return bot;
  }

  public void setBot(Boolean bot) {
    this.bot = bot;
  }

  public SpectatorV4CurrentGameParticipant perks(SpectatorV4Perks perks) {
    this.perks = perks;
    return this;
  }

   /**
   * Perks/Runes Reforged Information
   * @return perks
  **/
  @ApiModelProperty(value = "Perks/Runes Reforged Information")
  public SpectatorV4Perks getPerks() {
    return perks;
  }

  public void setPerks(SpectatorV4Perks perks) {
    this.perks = perks;
  }

  public SpectatorV4CurrentGameParticipant spell2Id(Long spell2Id) {
    this.spell2Id = spell2Id;
    return this;
  }

   /**
   * The ID of the second summoner spell used by this participant
   * @return spell2Id
  **/
  @ApiModelProperty(value = "The ID of the second summoner spell used by this participant")
  public Long getSpell2Id() {
    return spell2Id;
  }

  public void setSpell2Id(Long spell2Id) {
    this.spell2Id = spell2Id;
  }

  public SpectatorV4CurrentGameParticipant teamId(Long teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * The team ID of this participant, indicating the participant&#39;s team
   * @return teamId
  **/
  @ApiModelProperty(value = "The team ID of this participant, indicating the participant's team")
  public Long getTeamId() {
    return teamId;
  }

  public void setTeamId(Long teamId) {
    this.teamId = teamId;
  }

  public SpectatorV4CurrentGameParticipant spell1Id(Long spell1Id) {
    this.spell1Id = spell1Id;
    return this;
  }

   /**
   * The ID of the first summoner spell used by this participant
   * @return spell1Id
  **/
  @ApiModelProperty(value = "The ID of the first summoner spell used by this participant")
  public Long getSpell1Id() {
    return spell1Id;
  }

  public void setSpell1Id(Long spell1Id) {
    this.spell1Id = spell1Id;
  }

  public SpectatorV4CurrentGameParticipant summonerId(String summonerId) {
    this.summonerId = summonerId;
    return this;
  }

   /**
   * The encrypted summoner ID of this participant
   * @return summonerId
  **/
  @ApiModelProperty(value = "The encrypted summoner ID of this participant")
  public String getSummonerId() {
    return summonerId;
  }

  public void setSummonerId(String summonerId) {
    this.summonerId = summonerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpectatorV4CurrentGameParticipant spectatorV4CurrentGameParticipant = (SpectatorV4CurrentGameParticipant) o;
    return Objects.equals(this.profileIconId, spectatorV4CurrentGameParticipant.profileIconId) &&
        Objects.equals(this.championId, spectatorV4CurrentGameParticipant.championId) &&
        Objects.equals(this.summonerName, spectatorV4CurrentGameParticipant.summonerName) &&
        Objects.equals(this.gameCustomizationObjects, spectatorV4CurrentGameParticipant.gameCustomizationObjects) &&
        Objects.equals(this.bot, spectatorV4CurrentGameParticipant.bot) &&
        Objects.equals(this.perks, spectatorV4CurrentGameParticipant.perks) &&
        Objects.equals(this.spell2Id, spectatorV4CurrentGameParticipant.spell2Id) &&
        Objects.equals(this.teamId, spectatorV4CurrentGameParticipant.teamId) &&
        Objects.equals(this.spell1Id, spectatorV4CurrentGameParticipant.spell1Id) &&
        Objects.equals(this.summonerId, spectatorV4CurrentGameParticipant.summonerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profileIconId, championId, summonerName, gameCustomizationObjects, bot, perks, spell2Id, teamId, spell1Id, summonerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpectatorV4CurrentGameParticipant {\n");
    
    sb.append("    profileIconId: ").append(toIndentedString(profileIconId)).append("\n");
    sb.append("    championId: ").append(toIndentedString(championId)).append("\n");
    sb.append("    summonerName: ").append(toIndentedString(summonerName)).append("\n");
    sb.append("    gameCustomizationObjects: ").append(toIndentedString(gameCustomizationObjects)).append("\n");
    sb.append("    bot: ").append(toIndentedString(bot)).append("\n");
    sb.append("    perks: ").append(toIndentedString(perks)).append("\n");
    sb.append("    spell2Id: ").append(toIndentedString(spell2Id)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    spell1Id: ").append(toIndentedString(spell1Id)).append("\n");
    sb.append("    summonerId: ").append(toIndentedString(summonerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

