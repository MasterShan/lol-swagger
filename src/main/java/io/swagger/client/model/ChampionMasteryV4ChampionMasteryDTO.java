/*
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## Download OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([download file](../openapi-3.0.0.json), [view ui](?openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([download file](../openapi-3.0.0.min.json), [view ui](?openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([download file](../openapi-3.0.0.yml), [view ui](?openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([download file](../openapi-3.0.0.min.yml), [view ui](?openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([download file](../swaggerspec-2.0.json), [view ui](?swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([download file](../swaggerspec-2.0.min.json), [view ui](?swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([download file](../swaggerspec-2.0.yml), [view ui](?swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([download file](../swaggerspec-2.0.min.yml), [view ui](?swaggerspec-2.0.min.yml)) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.org/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * OpenAPI spec version: dfa1c0f97b9cc62a43c9fb91daa1b91b3e9485c2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * This object contains single Champion Mastery information for player and champion combination.
 */
@ApiModel(description = "This object contains single Champion Mastery information for player and champion combination.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T15:57:39.031+02:00")
public class ChampionMasteryV4ChampionMasteryDTO {
  @SerializedName("chestGranted")
  private Boolean chestGranted = null;

  @SerializedName("championLevel")
  private Integer championLevel = null;

  @SerializedName("championPoints")
  private Integer championPoints = null;

  @SerializedName("championId")
  private Long championId = null;

  @SerializedName("championPointsUntilNextLevel")
  private Long championPointsUntilNextLevel = null;

  @SerializedName("lastPlayTime")
  private Long lastPlayTime = null;

  @SerializedName("tokensEarned")
  private Integer tokensEarned = null;

  @SerializedName("championPointsSinceLastLevel")
  private Long championPointsSinceLastLevel = null;

  @SerializedName("summonerId")
  private String summonerId = null;

  public ChampionMasteryV4ChampionMasteryDTO chestGranted(Boolean chestGranted) {
    this.chestGranted = chestGranted;
    return this;
  }

   /**
   * Is chest granted for this champion or not in current season.
   * @return chestGranted
  **/
  @ApiModelProperty(value = "Is chest granted for this champion or not in current season.")
  public Boolean isChestGranted() {
    return chestGranted;
  }

  public void setChestGranted(Boolean chestGranted) {
    this.chestGranted = chestGranted;
  }

  public ChampionMasteryV4ChampionMasteryDTO championLevel(Integer championLevel) {
    this.championLevel = championLevel;
    return this;
  }

   /**
   * Champion level for specified player and champion combination.
   * @return championLevel
  **/
  @ApiModelProperty(value = "Champion level for specified player and champion combination.")
  public Integer getChampionLevel() {
    return championLevel;
  }

  public void setChampionLevel(Integer championLevel) {
    this.championLevel = championLevel;
  }

  public ChampionMasteryV4ChampionMasteryDTO championPoints(Integer championPoints) {
    this.championPoints = championPoints;
    return this;
  }

   /**
   * Total number of champion points for this player and champion combination - they are used to determine championLevel.
   * @return championPoints
  **/
  @ApiModelProperty(value = "Total number of champion points for this player and champion combination - they are used to determine championLevel.")
  public Integer getChampionPoints() {
    return championPoints;
  }

  public void setChampionPoints(Integer championPoints) {
    this.championPoints = championPoints;
  }

  public ChampionMasteryV4ChampionMasteryDTO championId(Long championId) {
    this.championId = championId;
    return this;
  }

   /**
   * Champion ID for this entry.
   * @return championId
  **/
  @ApiModelProperty(value = "Champion ID for this entry.")
  public Long getChampionId() {
    return championId;
  }

  public void setChampionId(Long championId) {
    this.championId = championId;
  }

  public ChampionMasteryV4ChampionMasteryDTO championPointsUntilNextLevel(Long championPointsUntilNextLevel) {
    this.championPointsUntilNextLevel = championPointsUntilNextLevel;
    return this;
  }

   /**
   * Number of points needed to achieve next level. Zero if player reached maximum champion level for this champion.
   * @return championPointsUntilNextLevel
  **/
  @ApiModelProperty(value = "Number of points needed to achieve next level. Zero if player reached maximum champion level for this champion.")
  public Long getChampionPointsUntilNextLevel() {
    return championPointsUntilNextLevel;
  }

  public void setChampionPointsUntilNextLevel(Long championPointsUntilNextLevel) {
    this.championPointsUntilNextLevel = championPointsUntilNextLevel;
  }

  public ChampionMasteryV4ChampionMasteryDTO lastPlayTime(Long lastPlayTime) {
    this.lastPlayTime = lastPlayTime;
    return this;
  }

   /**
   * Last time this champion was played by this player - in Unix milliseconds time format.
   * @return lastPlayTime
  **/
  @ApiModelProperty(value = "Last time this champion was played by this player - in Unix milliseconds time format.")
  public Long getLastPlayTime() {
    return lastPlayTime;
  }

  public void setLastPlayTime(Long lastPlayTime) {
    this.lastPlayTime = lastPlayTime;
  }

  public ChampionMasteryV4ChampionMasteryDTO tokensEarned(Integer tokensEarned) {
    this.tokensEarned = tokensEarned;
    return this;
  }

   /**
   * The token earned for this champion to levelup.
   * @return tokensEarned
  **/
  @ApiModelProperty(value = "The token earned for this champion to levelup.")
  public Integer getTokensEarned() {
    return tokensEarned;
  }

  public void setTokensEarned(Integer tokensEarned) {
    this.tokensEarned = tokensEarned;
  }

  public ChampionMasteryV4ChampionMasteryDTO championPointsSinceLastLevel(Long championPointsSinceLastLevel) {
    this.championPointsSinceLastLevel = championPointsSinceLastLevel;
    return this;
  }

   /**
   * Number of points earned since current level has been achieved.
   * @return championPointsSinceLastLevel
  **/
  @ApiModelProperty(value = "Number of points earned since current level has been achieved.")
  public Long getChampionPointsSinceLastLevel() {
    return championPointsSinceLastLevel;
  }

  public void setChampionPointsSinceLastLevel(Long championPointsSinceLastLevel) {
    this.championPointsSinceLastLevel = championPointsSinceLastLevel;
  }

  public ChampionMasteryV4ChampionMasteryDTO summonerId(String summonerId) {
    this.summonerId = summonerId;
    return this;
  }

   /**
   * Summoner ID for this entry. (Encrypted)
   * @return summonerId
  **/
  @ApiModelProperty(value = "Summoner ID for this entry. (Encrypted)")
  public String getSummonerId() {
    return summonerId;
  }

  public void setSummonerId(String summonerId) {
    this.summonerId = summonerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChampionMasteryV4ChampionMasteryDTO championMasteryV4ChampionMasteryDTO = (ChampionMasteryV4ChampionMasteryDTO) o;
    return Objects.equals(this.chestGranted, championMasteryV4ChampionMasteryDTO.chestGranted) &&
        Objects.equals(this.championLevel, championMasteryV4ChampionMasteryDTO.championLevel) &&
        Objects.equals(this.championPoints, championMasteryV4ChampionMasteryDTO.championPoints) &&
        Objects.equals(this.championId, championMasteryV4ChampionMasteryDTO.championId) &&
        Objects.equals(this.championPointsUntilNextLevel, championMasteryV4ChampionMasteryDTO.championPointsUntilNextLevel) &&
        Objects.equals(this.lastPlayTime, championMasteryV4ChampionMasteryDTO.lastPlayTime) &&
        Objects.equals(this.tokensEarned, championMasteryV4ChampionMasteryDTO.tokensEarned) &&
        Objects.equals(this.championPointsSinceLastLevel, championMasteryV4ChampionMasteryDTO.championPointsSinceLastLevel) &&
        Objects.equals(this.summonerId, championMasteryV4ChampionMasteryDTO.summonerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chestGranted, championLevel, championPoints, championId, championPointsUntilNextLevel, lastPlayTime, tokensEarned, championPointsSinceLastLevel, summonerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChampionMasteryV4ChampionMasteryDTO {\n");
    
    sb.append("    chestGranted: ").append(toIndentedString(chestGranted)).append("\n");
    sb.append("    championLevel: ").append(toIndentedString(championLevel)).append("\n");
    sb.append("    championPoints: ").append(toIndentedString(championPoints)).append("\n");
    sb.append("    championId: ").append(toIndentedString(championId)).append("\n");
    sb.append("    championPointsUntilNextLevel: ").append(toIndentedString(championPointsUntilNextLevel)).append("\n");
    sb.append("    lastPlayTime: ").append(toIndentedString(lastPlayTime)).append("\n");
    sb.append("    tokensEarned: ").append(toIndentedString(tokensEarned)).append("\n");
    sb.append("    championPointsSinceLastLevel: ").append(toIndentedString(championPointsSinceLastLevel)).append("\n");
    sb.append("    summonerId: ").append(toIndentedString(summonerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

